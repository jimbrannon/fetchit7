<?php

/**
 * @file
 * Lets drupal 7 site builders create forms and graphs connected to remote databases.
 * 
 * Creates custom content storing the form, graph and database connection metadata,
 * then uses that metadata to create the "connected" forms and graphs as menu callbacks
 * 
 */
 
 /**
  * Implementation of hook_menu
  */
function fetchit7_menu() {
	$items['admin/config/fetchit7'] = array(
		'title' => 'fetchit7',
		'description' => 'fetchit7 options',
		'position' => 'right',
		'weight' => -5,
		'page callback' => 'system_admin_menu_block_page',
		'access arguments' => array('administer site configuration'),
		'file' => 'system.admin.inc',
		'file path' => drupal_get_path('module', 'system'),
	);

	$items['admin/config/fetchit7/settings'] = array(
		'title' => 'fetchit7 settings',
		'description' => 'Change how the fetchit7 module operates',
		'position' => 'right',
		'weight' => -5,
		'page callback' => 'drupal_get_form',
		'page arguments' => array('fetchit7_admin_settings'),
		'access arguments' => array('administer site configuration'),
		'type' => MENU_NORMAL_ITEM,
		'file' => 'fetchit7.admin.inc',
		'file path' => drupal_get_path('module', 'fetchit7'),
	);

	$items['admin/config/fetchit7/dbsettings'] = array(
		'title' => 'fetchit7 database default settings',
		'description' => 'These become the default database server connection settings for each node.',
		'position' => 'right',
		'weight' => -4,
		'page callback' => 'drupal_get_form',
		'page arguments' => array('fetchit7_admin_dbsettings'),
		'access arguments' => array('administer site configuration'),
		'type' => MENU_NORMAL_ITEM,
		'file' => 'fetchit7.admin.inc',
		'file path' => drupal_get_path('module', 'fetchit7'),
	);

	$items['admin/config/fetchit7/reset'] = array(
		'title' => 'fetchit7 database reset',
		'description' => 'The fetchit7 database tables should be reset whenever fetchit7 settings or content data change.',
		'position' => 'right',
		'weight' => -3,
		'page callback' => 'drupal_get_form',
		'page arguments' => array('fetchit7_admin_reset'),
		'access arguments' => array('administer site configuration'),
		'type' => MENU_NORMAL_ITEM,
		'file' => 'fetchit7.admin.inc',
		'file path' => drupal_get_path('module', 'fetchit7'),
	);

	$items['admin/config/fetchit7/backupcontent'] = array(
		'title' => 'Backup fetchit7 content',
		'description' => '[Not Available] Allows fetchit7 content to be exported to a file.',
		'position' => 'right',
		'weight' => -2,
		'page callback' => 'drupal_get_form',
		'page arguments' => array('fetchit7_admin_backupcontent'),
		'access arguments' => array('administer site configuration'),
		'type' => MENU_NORMAL_ITEM,
		'file' => 'fetchit7.admin.inc',
		'file path' => drupal_get_path('module', 'fetchit7'),
	);

	$items['admin/config/fetchit7/restorecontent'] = array(
		'title' => 'Restore fetchit7 content',
		'description' => '[Not Available] Allows fetchit7 content to be restored from a file.',
		'position' => 'right',
		'weight' => -1,
		'page callback' => 'drupal_get_form',
		'page arguments' => array('fetchit7_admin_restorecontent'),
		'access arguments' => array('administer site configuration'),
		'type' => MENU_NORMAL_ITEM,
		'file' => 'fetchit7.admin.inc',
		'file path' => drupal_get_path('module', 'fetchit7'),
	);

	$items['admin/config/fetchit7/testform'] = array(
		'title'							=> 'fetchit7 content test',
		'description'				=> 'temporary menu item to allow testing fetchit7 forms content.',
		'position'					=> 'right',
		'weight'						=> 10,
		'page callback'			=> 'drupal_get_form',
		'page arguments'		=> array('fetchit7_table_form_13'),
		'access arguments'	=> array('administer site configuration'),
		'type'							=> MENU_NORMAL_ITEM,
		'file'							=> 'fetchit7.forms.inc',
		'file path'					=> drupal_get_path('module', 'fetchit7'),
	);
	
	return $items;
}

 /**
  * Implementation of hook_node_info
  * 
  * returns a structured array of the new content types this module is creating
  * created automatically when node_types_rebuild() is called
  * these are just basic node types until additional fields are added (instances) 
  */
function fetchit7_node_info() {
	// the fetchit7 content types
	//   there needs to be code in the fetchit7.install file to create the fields and instances for each of these types
	$fetchit7_content_types = array(
		// the HTML table content type
		'fetchit7_content_table' => array(
			'name'				=> t('fetchit7 HTML table content type'),
			'base'				=> 'node_content', // should this be fetchit7_content_table?
			'description'	=> t('Use this fetchit7 content to create an HTML table connected to a database view/table, optionally with selectable rows'),
			'help'				=> t('Enter all the information necessary to create an HTML table connected to a database server'),
			'custom'			=> FALSE,
			'modified'		=> FALSE,
			'locked'			=> FALSE,
			'disabled'		=> FALSE,
			'has_title'		=> TRUE,
			'title_label'	=> 'Content Title',
			'module'			=> 'fetchit7',
			'orig_type'		=> 'fetchit7_content_table',
		),
		'fetchit7_content_param' => array(
			'name'				=> t('fetchit7 parameter input content type'),
			'base'				=> 'node_content', // should this be fetchit7_content_param?
			'description'	=> t('Use this fetchit7 content to create parameter input/selection forms connected to database views/tables'),
			'help'				=> t('Enter all the information necessary to create a parameter input/selection form connected to a database server'),
			'custom'			=> FALSE,
			'modified'		=> FALSE,
			'locked'			=> FALSE,
			'disabled'		=> FALSE,
			'has_title'		=> TRUE,
			'title_label'	=> 'Content Title',
			'module'			=> 'fetchit7',
			'orig_type'		=> 'fetchit7_content_param',
		),
	);
	
	return $fetchit7_content_types;
}


/**
 * Implements hook_forms().
 * 
 * Allows the fetchit7 form to be repeated multiple times on a page.
 * See http://drupal.org/node/1970846.
 */

 function fetchit7_forms($form_id, $args) {

  $forms = array();
	watchdog('fetchit7','fetchit7_forms: '.$form_id);
	// this is just a test form
  if (substr($form_id, 0, 18) == 'fetchit7_xxx_form_') {
    $forms[$form_id] = array('callback' => 'fetchit7_xxx_form');
  }
	// this is the html table form
  if (substr($form_id, 0, 20) == 'fetchit7_table_form_') {
    $forms[$form_id] = array('callback' => 'fetchit7_table_form');
  }
	// this is the parameter input form
  if (substr($form_id, 0, 20) == 'fetchit7_param_form_') {
    $forms[$form_id] = array('callback' => 'fetchit7_param_form');
  }

  return $forms;
}


