<?

/**
 * @file
 * 
 * Schema, install, update, enable and uninstall functions for the fetchit7 module.
 */
 
include_once(drupal_get_path('module', 'fetchit7').'/fetchit7.constants.inc'); 
 
/**
 * Implements hook_install()
 * 
 * called after hook_schema 
 * a good place to populate the tables that were created in the hook schema
 * 
 */
 
function fetchit7_install () {
	//watchdog("fetchit7 module","fetchit7_install: populating table fetchit7_content_types");
	// add the fetchit7_content_type records
	$table = 'fetchit7_content_types';
	$record = new stdClass();
	// HTML table
	$record->ndx = 0;
	$record->name = 'fetchit7_content_table';
	$record->title = 'HTML Table';
	$record->description = 'These are either plain HTML tables or the new Drupal 7 tableselect elements with selections (radio buttons or checkboxes) in column 1.  Can be used to display a table, select a single record, select multiple records, or delete multiple records.';
	$record->location = 'block'; // block
	$record->enabled = 1; // true
	$record->db_host = 'localhost';
	$record->db_type = 'postgresql'; // pgsql
	$record->db_port = 5432;
	$record->db_name = '';
	$record->db_login = '';
	$record->db_password = '';
	//$record->pre_function = '';
	//$record->post_function = '';
	//$record->source_view = '';
	//$record->uid_field = '';
	//$record->key_field = '';
	//$record->table_weight = -8;
	//$record->submit_label = '';
	//$record->submit_weight = 8;
	//$record->tbl_sel_typ = 'none';
	//$record->tbl_sel_tbl = '';
	drupal_write_record($table,$record);
	// Google data visualization record
	$record->ndx = 2;
	$record->name = 'fetchit7_content_gviz';
	$record->title = 'Google Data Visualization';
	$record->description = 'Google Data Visualization';
	$record->location = 'block'; // block
	$record->enabled = 0; // false
	$record->db_host = 'localhost';
	$record->db_type = 'postgresql'; // pgsql
	$record->db_port = 5432;
	$record->db_name = '';
	$record->db_login = '';
	$record->db_password = '';
	//$record->pre_function = '';
	//$record->post_function = '';
	drupal_write_record($table,$record);
	// parameter input
	$record->ndx = 4;
	$record->name = 'fetchit7_content_param';
	$record->title = 'Parameter Input';
	$record->description = 'Parameter Input';
	$record->location = 'block'; // block
	$record->enabled = 1; // false
	$record->db_host = 'localhost';
	$record->db_type = 'postgresql'; // pgsql
	$record->db_port = 5432;
	$record->db_name = '';
	$record->db_login = '';
	$record->db_password = '';
	//$record->pre_function = '';
	//$record->post_function = '';
	drupal_write_record($table,$record);
	// append record
	$record->ndx = 7;
	$record->name = 'fetchit7_content_appnd';
	$record->title = 'Append Record Form';
	$record->description = 'Append Record Form';
	$record->location = 'block'; // block
	$record->enabled = 1; // false
	$record->db_host = 'localhost';
	$record->db_type = 'postgresql'; // pgsql
	$record->db_port = 5432;
	$record->db_name = '';
	$record->db_login = '';
	$record->db_password = '';
	//$record->pre_function = '';
	//$record->post_function = '';
	drupal_write_record($table,$record);
	// editable grid
	$record->ndx = 8;
	$record->name = 'fetchit7_content_egrid';
	$record->title = 'Editable HTML Table';
	$record->description = 'Editable HTML Table';
	$record->location = 'block'; // block
	$record->enabled = 1; // false
	$record->db_host = 'localhost';
	$record->db_type = 'postgresql'; // pgsql
	$record->db_port = 5432;
	$record->db_name = '';
	$record->db_login = '';
	$record->db_password = '';
	//$record->pre_function = '';
	//$record->post_function = '';
	drupal_write_record($table,$record);
	// Open layers map
	$record->ndx = 10;
	$record->name = 'fetchit7_content_olmap';
	$record->title = 'Open Layers Map';
	$record->description = 'Open Layers Map';
	$record->location = 'block'; // block
	$record->enabled = 0; // false
	$record->db_host = 'localhost';
	$record->db_type = 'postgresql'; // pgsql
	$record->db_port = 5432;
	$record->db_name = '';
	$record->db_login = '';
	$record->db_password = '';
	//$record->pre_function = '';
	//$record->post_function = '';
	drupal_write_record($table,$record);

	//watchdog("fetchit7 module","fetchit7_install: populating table fetchit7_db_types");
	// add the fetchit7_db_type records
	$table = 'fetchit7_db_types';
	$record = new stdClass();
	$record->ndx = 0;
	$record->name = 'postgresql';
	$record->label = 'PostgreSQL';
	$record->description = 'PostgreSQL relational database system';
	$record->enabled = TRUE;
	drupal_write_record($table,$record);
	$record->ndx = 1;
	$record->name = 'mysql';
	$record->label = 'MySQL';
	$record->description = 'MySQL relational database system';
	$record->enabled = FALSE;
	drupal_write_record($table,$record);
	$record->ndx = 2;
	$record->name = 'sqlserver';
	$record->label = 'SQL Server';
	$record->description = 'Microsoft SQL Server relational database system';
	$record->enabled = FALSE;
	drupal_write_record($table,$record);

	//watchdog("fetchit7 module","fetchit7_install: populating table fetchit7_location_types");
	// add the fetchit7_location_type records
	$table = 'fetchit7_location_types';
	$record = new stdClass();
	$record->ndx = 0;
	$record->name = 'none';
	$record->label = 'Not displayed';
	$record->description = 'the fetchit7 output is not displayed';
	$record->enabled = TRUE;
	drupal_write_record($table,$record);
	$record->ndx = 1;
	$record->name = 'page';
	$record->label = 'Page';
	$record->description = 'the fetchit7 output is displayed on a page via a menu hook callback';
	$record->enabled = TRUE;
	drupal_write_record($table,$record);
	$record->ndx = 2;
	$record->name = 'block';
	$record->label = 'Block';
	$record->description = 'the fetchit7 output is displayed in a block via the block system view call';
	$record->enabled = TRUE;
	drupal_write_record($table,$record);
	
	// now that the fetchit7 content types table is created and populated
	// create the fetchit7 content types and extend them via fields (fields API)
	//    [note: eventually the fetchit7 content types table will be a custom content type (node type) too and extended via fields like this!!]
	// note that the node_types_rebuild() function causes Drupal 7 to rebuild it's internal node types list
	//   by calling all the hook_node_info functions (including fetchit7_node_info)
	//   and it creates the content types (node types) it finds described there
	//   so the content types (node types) described in fetchit7_node_info will be created by this next line of code
	
	// create base fetchit7 content types
	node_types_rebuild();
	$types = node_type_get_types();
	// add the body field to the various fetchit7 content types
	// TODO: ask Kelly if they really want a body in these types since there is an above/below field (only reason would be to get better HTML WYSIWYG editor in GUI)
	$body_instance = node_add_body_field($types['fetchit7_content_table']);
	$body_instance = node_add_body_field($types['fetchit7_content_param']);
	$body_instance = node_add_body_field($types['fetchit7_content_egrid']);
	$body_instance = node_add_body_field($types['fetchit7_content_appnd']);
	//$body_instance = node_add_body_field($types['fetchit7_content_xxxxxx']);
	// ...
	//
	// here you could modify the body field if you wanted to, such as
	// $body_instance['type'] = 'text_summary_or_trimmed';
	// field_update_instance($body_instance);
	
	//create the various fields to be used by the fetchit7 content types
	foreach (_fetchit7_installed_fields() as $field) {
		field_create_field($field);
	}	
	// link the fields to the fetchit7_content_table content type via "instances"
	foreach (_fetchit7_content_table_installed_instances() as $instance) {
		field_create_instance($instance);
	}	
	// link the fields to the fetchit7_content_param content type via "instances"
	foreach (_fetchit7_content_param_installed_instances() as $instance) {
		field_create_instance($instance);
	}	
		
}


/**
 * function that returns an array of all the fields created by this module
 * 
 * the best way I have found to figure this out is using drush and the devel module:
 * drush ev 'print var_export(field_info_field("field_name"));'
 * e.g. drush ev 'print var_export(field_info_field("fetchit7_field_location"));'
 *  */
function _fetchit7_installed_fields () {
	$t = get_t();
	$fetchit7_fields = array(
		// on this example one I am including many of the field definition parameters in the array
		//   but commenting out the ones I think I should let drupal 7 handle with defaults for now
		//'fetchit7_field_location' => array(
			//'label'						=> $t('form output location'),
			//'settings'				=> array (
			//		'allowed_values'	=> array (
			//				0		=> 'not displayed',
			//				1		=> 'page',
			//				2		=> 'block',
			//		),
			//		//'allowed_values_function' => '',
			//),
			//'entity_types'		=> array (),
			//'translatable'		=> '0',
			//'storage'					=> array (
			//		'type'						=> 'field_sql_storage',
			//		'settings'				=> array (),
			//		'module'					=> 'field_sql_storage',
			//		'active'					=> '1',
			//		'details'					=> array (
			//				'sql' => array (
			//						'FIELD_LOAD_CURRENT' => array (
			//								'field_data_fetchit7_field_location' => array (
			//										'value' => 'ffetchit7_field_location_value',
			//								),
			//						),
			//						'FIELD_LOAD_REVISION' => array (
			//								'field_revision_fetchit7_field_location' => array (
			//										'value' => 'fetchit7_field_location_value',
			//								),
			//						),
			//				),
			//		),
			//),
			//'foreign keys'		=> array (),
			//'indexes'					=> array (
			//		'value'						=> array (
			//				0 => 'value',
			//		),
			//),
			//'id'							=> '10',
			//'field_name'			=> 'fetchit7_field_location',
			//'type'						=> 'list_integer',
			//'module'					=> 'list',
			//'active'					=> '1',
			//'locked'					=> '0',
			//'cardinality'			=> '1',
			//'deleted'					=> '0',
			//'columns'					=> array (
			//		'value'						=> array (
			//				'type' => 'int',
			//				'not null' => false,
			//		),
			//),
			//'bundles'					=> array (
			//		'node'						=> array (
			//				0 => 'fetchit7_content_table',
			//		),
			//),
		//),
		// the rest will be defined in a more compressed fashion :-p

		// =====================================================
		// these are fields that apply to multiple content types
		// =====================================================
		// form location
		'fetchit7_field_location' => array(
			'label'						=> $t('form output location'),
			'settings'				=> array (
					'allowed_values'	=> array (
							'none'		=> 'Not displayed',
							'page'		=> 'Page',
							'block'		=> 'Block',
					),
			),
			'field_name'			=> 'fetchit7_field_location',
			'type'						=> 'list_text',
			'module'					=> 'list',
			'active'					=> '1',
			'locked'					=> '0',
			'cardinality'			=> '1',
		),
		// form enabled
		'fetchit7_field_enabled' => array(
			'label'						=> $t('form output enabled'),
			'settings'				=> array (
					'allowed_values'	=> array (
							0		=> '',
							1		=> '',
					),
			),
			'field_name'			=> 'fetchit7_field_enabled',
			'type'						=> 'list_boolean',
			'module'					=> 'list',
			'active'					=> '1',
			'locked'					=> '0',
			'cardinality'			=> '1',
		),
		// database server host name
		'fetchit7_field_db_host' => array(
			'label'						=> $t('Database server host name'),
			'settings'				=> array (
					'max_length'	=> '60',
			),
			'field_name'			=> 'fetchit7_field_db_host',
			'type'						=> 'text',
			'module'					=> 'text',
			'active'					=> '1',
			'locked'					=> '0',
			'cardinality'			=> '1',
		),
		// database server type
		'fetchit7_field_db_type' => array(
			'label'						=> $t('Database server type'),
			'settings'				=> array (
					'allowed_values'	=> array (
							FETCHIT7_DBTYPE_NAME_PGSQL			=> FETCHIT7_DBTYPE_LABEL_PGSQL, //'postgresql'	=> 'PostgreSQL',
							FETCHIT7_DBTYPE_NAME_MYSQL			=> FETCHIT7_DBTYPE_LABEL_MYSQL, //'mysql'	=> 'MySQL',
							FETCHIT7_DBTYPE_NAME_MSSQL			=> FETCHIT7_DBTYPE_LABEL_MSSQL, //'sqlserver'	=> 'SQL Server',
					),
			),
			'field_name'			=> 'fetchit7_field_db_type',
			'type'						=> 'list_text',
			'module'					=> 'list',
			'active'					=> '1',
			'locked'					=> '0',
			'cardinality'			=> '1',
		),
		// database server port
		'fetchit7_field_db_port' => array(
			'label'						=> $t('Database server host port'),
			'field_name'			=> 'fetchit7_field_db_port',
			'type'						=> 'number_integer',
			'module'					=> 'number',
			'active'					=> '1',
			'locked'					=> '0',
			'cardinality'			=> '1',
			'columns'					=> array(
					'value'						=> array(
							'type'						=> 'int',
							'not null'				=> FALSE,
					),
			),
		),
		// database name
		'fetchit7_field_db_name' => array(
			'label'						=> $t('Database name'),
			'settings'				=> array (
					'max_length'	=> '60',
			),
			'field_name'			=> 'fetchit7_field_db_name',
			'type'						=> 'text',
			'module'					=> 'text',
			'active'					=> '1',
			'locked'					=> '0',
			'cardinality'			=> '1',
		),
		// database user login
		'fetchit7_field_db_login' => array(
			'label'						=> $t('Database server user login'),
			'settings'				=> array (
					'max_length'	=> '60',
			),
			'field_name'			=> 'fetchit7_field_db_login',
			'type'						=> 'text',
			'module'					=> 'text',
			'active'					=> '1',
			'locked'					=> '0',
			'cardinality'			=> '1',
		),
		// database user password
		'fetchit7_field_db_password' => array(
			'label'						=> $t('Database server user password'),
			'settings'				=> array (
					'max_length'	=> '60',
			),
			'field_name'			=> 'fetchit7_field_db_password',
			'type'						=> 'text',
			'module'					=> 'text',
			'active'					=> '1',
			'locked'					=> '0',
			'cardinality'			=> '1',
		),
		// pre-(form query) function name (either database function or php function)
		'fetchit7_field_pre_function' => array(
			'label'						=> $t('Pre-(form query) function name'),
			'settings'				=> array (
					'max_length'	=> '255',
			),
			'field_name'			=> 'fetchit7_field_pre_function',
			'type'						=> 'text',
			'module'					=> 'text',
			'active'					=> '1',
			'locked'					=> '0',
			'cardinality'			=> '1',
		),
		// post-(form submit) function name (either database function or php function)
		'fetchit7_field_post_function' => array(
			'label'						=> $t('Post-(form submit) function name'),
			'settings'				=> array (
					'max_length'	=> '255',
			),
			'field_name'			=> 'fetchit7_field_post_function',
			'type'						=> 'text',
			'module'					=> 'text',
			'active'					=> '1',
			'locked'					=> '0',
			'cardinality'			=> '1',
		),
		// database source data table/view name
		'fetchit7_field_source_view' => array(
			'label'						=> $t('Table data source view/table name'),
			'settings'				=> array (
					'max_length'	=> '60',
			),
			'field_name'			=> 'fetchit7_field_source_view',
			'type'						=> 'text',
			'module'					=> 'text',
			'active'					=> '1',
			'locked'					=> '0',
			'cardinality'			=> '1',
		),
		// user uid field name
		'fetchit7_field_uid_field' => array(
			'label'						=> $t('User id (uid) field name'),
			'settings'				=> array (
					'max_length'	=> '60',
			),
			'field_name'			=> 'fetchit7_field_uid_field',
			'type'						=> 'text',
			'module'					=> 'text',
			'active'					=> '1',
			'locked'					=> '0',
			'cardinality'			=> '1',
		),
		// table key field name
		'fetchit7_field_key_field' => array(
			'label'						=> $t('Key field name'),
			'settings'				=> array (
					'max_length'	=> '60',
			),
			'field_name'			=> 'fetchit7_field_key_field',
			'type'						=> 'text',
			'module'					=> 'text',
			'active'					=> '1',
			'locked'					=> '0',
			'cardinality'			=> '1',
		),
		// table weight
		'fetchit7_field_table_weight' => array(
			'label'						=> $t('Table weight'),
			'settings'				=> array (
					'allowed_values'	=> array (
							-8		=> '-8',
							-7		=> '-7',
							-6		=> '-6',
							-5		=> '-5',
							-4		=> '-4',
							-3		=> '-3',
							-2		=> '-2',
							-1		=> '-1',
							0		=> '0',
							1		=> '1',
							2		=> '2',
							3		=> '3',
							4		=> '4',
							5		=> '5',
							6		=> '6',
							7		=> '7',
							8		=> '8',
					),
					//'allowed_values_function' => '',
			),
			//'entity_types'		=> array (),
			//'translatable'		=> '0',
			//'storage'					=> array (
			//		'type'						=> 'field_sql_storage',
			//		'settings'				=> array (),
			//		'module'					=> 'field_sql_storage',
			//		'active'					=> '1',
			//		'details'					=> array (
			//				'sql' => array (
			//						'FIELD_LOAD_CURRENT' => array (
			//								'field_data_fetchit7_field_location' => array (
			//										'value' => 'ffetchit7_field_location_value',
			//								),
			//						),
			//						'FIELD_LOAD_REVISION' => array (
			//								'field_revision_fetchit7_field_location' => array (
			//										'value' => 'fetchit7_field_location_value',
			//								),
			//						),
			//				),
			//		),
			//),
			//'foreign keys'		=> array (),
			//'indexes'					=> array (
			//		'value'						=> array (
			//				0 => 'value',
			//		),
			//),
			//'id'							=> '10',
			'field_name'			=> 'fetchit7_field_table_weight',
			'type'						=> 'list_integer',
			'module'					=> 'list',
			'active'					=> '1',
			'locked'					=> '0',
			'cardinality'			=> '1',
			//'deleted'					=> '0',
			//'columns'					=> array (
			//		'value'						=> array (
			//				'type' => 'int',
			//				'not null' => false,
			//		),
			//),
			//'bundles'					=> array (
			//		'node'						=> array (
			//				0 => 'fetchit7_content_table',
			//		),
			//),
		),
		// submit button label
		'fetchit7_field_submit_label' => array(
			'label'						=> $t('Submit button label'),
			'settings'				=> array (
					'max_length'	=> '60',
			),
			'field_name'			=> 'fetchit7_field_submit_label',
			'type'						=> 'text',
			'module'					=> 'text',
			'active'					=> '1',
			'locked'					=> '0',
			'cardinality'			=> '1',
		),
		// submit button weight
		'fetchit7_field_submit_weight' => array(
			'label'						=> $t('Submit button weight'),
			'settings'				=> array (
					'allowed_values'	=> array (
							-8		=> '-8',
							-7		=> '-7',
							-6		=> '-6',
							-5		=> '-5',
							-4		=> '-4',
							-3		=> '-3',
							-2		=> '-2',
							-1		=> '-1',
							0		=> '0',
							1		=> '1',
							2		=> '2',
							3		=> '3',
							4		=> '4',
							5		=> '5',
							6		=> '6',
							7		=> '7',
							8		=> '8',
					),
					//'allowed_values_function' => '',
			),
			//'entity_types'		=> array (),
			//'translatable'		=> '0',
			//'storage'					=> array (
			//		'type'						=> 'field_sql_storage',
			//		'settings'				=> array (),
			//		'module'					=> 'field_sql_storage',
			//		'active'					=> '1',
			//		'details'					=> array (
			//				'sql' => array (
			//						'FIELD_LOAD_CURRENT' => array (
			//								'field_data_fetchit7_field_location' => array (
			//										'value' => 'ffetchit7_field_location_value',
			//								),
			//						),
			//						'FIELD_LOAD_REVISION' => array (
			//								'field_revision_fetchit7_field_location' => array (
			//										'value' => 'fetchit7_field_location_value',
			//								),
			//						),
			//				),
			//		),
			//),
			//'foreign keys'		=> array (),
			//'indexes'					=> array (
			//		'value'						=> array (
			//				0 => 'value',
			//		),
			//),
			//'id'							=> '10',
			'field_name'			=> 'fetchit7_field_submit_weight',
			'type'						=> 'list_integer',
			'module'					=> 'list',
			'active'					=> '1',
			'locked'					=> '0',
			'cardinality'			=> '1',
			//'deleted'					=> '0',
			//'columns'					=> array (
			//		'value'						=> array (
			//				'type' => 'int',
			//				'not null' => false,
			//		),
			//),
			//'bundles'					=> array (
			//		'node'						=> array (
			//				0 => 'fetchit7_content_table',
			//		),
			//),
		),
		// submit button redirect
		'fetchit7_field_submit_redirect' => array(
			'label'						=> $t('Submit button redirect'),
			'settings'				=> array (
					'max_length'	=> '60',
			),
			'field_name'			=> 'fetchit7_field_submit_redirect',
			'type'						=> 'text',
			'module'					=> 'text',
			'active'					=> '1',
			'locked'					=> '0',
			'cardinality'			=> '1',
		),

		// =====================================================
		// these are fields that apply to html tables only
		// =====================================================
		// table record selection
		'fetchit7_field_tbl_sel_typ' => array(
			'label'						=> $t('Table record selection type'),
			'settings'				=> array (
					'allowed_values'	=> array (
							'none'						=> 'No record selection.',
							'copy_single'			=> 'Copy a single selected record key field to another table',
							'copy_multiple'		=> 'Copy multiple selected records key fields to another table',
							'delete_multiple'	=> 'Delete selected records from the original table',
					),
					//'max_length'	=> '60',
			),
			'field_name'			=> 'fetchit7_field_tbl_sel_typ',
			'type'						=> 'list_text',
			'module'					=> 'list',
			'active'					=> '1',
			'locked'					=> '0',
			'cardinality'			=> '1',
		),
		// table record selection output table
		'fetchit7_field_tbl_sel_tbl' => array(
			'label'						=> $t('Table record selection output table'),
			'settings'				=> array (
					'max_length'	=> '60',
			),
			'field_name'			=> 'fetchit7_field_tbl_sel_tbl',
			'type'						=> 'text',
			'module'					=> 'text',
			'active'					=> '1',
			'locked'					=> '0',
			'cardinality'			=> '1',
		),
		
		// =====================================================
		// these are fields that apply to param inputs only
		// =====================================================
		// show titles on each param control
		'fetchit7_field_par_shw_ttl' => array(
			'label'						=> $t('show titles'),
			'settings'				=> array (
					'allowed_values'	=> array (
							0		=> '',
							1		=> '',
					),
			),
			'field_name'			=> 'fetchit7_field_par_shw_ttl',
			'type'						=> 'list_boolean',
			'module'					=> 'list',
			'active'					=> '1',
			'locked'					=> '0',
			'cardinality'			=> '1',
		),
		// parameter table row count
		'fetchit7_field_par_tbl_rows' => array(
			'label'						=> $t('Parameter table row count'),
			'settings'				=> array (
					'allowed_values'	=> array (
							0		=> '0',
							1		=> '1',
							2		=> '2',
							3		=> '3',
							4		=> '4',
							5		=> '5',
							6		=> '6',
							7		=> '7',
							8		=> '8',
							9		=> '9',
							10	=> '10',
							11	=> '11',
							12	=> '12',
							25	=> '25',
					),
					//'allowed_values_function' => '',
			),
			//'entity_types'		=> array (),
			//'translatable'		=> '0',
			//'storage'					=> array (
			//		'type'						=> 'field_sql_storage',
			//		'settings'				=> array (),
			//		'module'					=> 'field_sql_storage',
			//		'active'					=> '1',
			//		'details'					=> array (
			//				'sql' => array (
			//						'FIELD_LOAD_CURRENT' => array (
			//								'field_data_fetchit7_field_location' => array (
			//										'value' => 'ffetchit7_field_location_value',
			//								),
			//						),
			//						'FIELD_LOAD_REVISION' => array (
			//								'field_revision_fetchit7_field_location' => array (
			//										'value' => 'fetchit7_field_location_value',
			//								),
			//						),
			//				),
			//		),
			//),
			//'foreign keys'		=> array (),
			//'indexes'					=> array (
			//		'value'						=> array (
			//				0 => 'value',
			//		),
			//),
			//'id'							=> '10',
			'field_name'			=> 'fetchit7_field_par_tbl_rows',
			'type'						=> 'list_integer',
			'module'					=> 'list',
			'active'					=> '1',
			'locked'					=> '0',
			'cardinality'			=> '1',
			//'deleted'					=> '0',
			//'columns'					=> array (
			//		'value'						=> array (
			//				'type' => 'int',
			//				'not null' => false,
			//		),
			//),
			//'bundles'					=> array (
			//		'node'						=> array (
			//				0 => 'fetchit7_content_table',
			//		),
			//),
		),
		// parameter field names
		'fetchit7_field_par_fld_name' => array(
			'label'						=> $t('Parameter names'),
			'settings'				=> array (
					'max_length'	=> '60',
			),
			'field_name'			=> 'fetchit7_field_par_fld_name',
			'type'						=> 'text',
			'module'					=> 'text',
			'active'					=> '1',
			'locked'					=> '0',
			'cardinality'			=> '-1',
		),
		// parameter field titles
		'fetchit7_field_par_fld_title' => array(
			'label'						=> $t('Parameter titles'),
			'settings'				=> array (
					'max_length'	=> '60',
			),
			'field_name'			=> 'fetchit7_field_par_fld_title',
			'type'						=> 'text',
			'module'					=> 'text',
			'active'					=> '1',
			'locked'					=> '0',
			'cardinality'			=> '-1',
		),
		// parameter field descriptions
		'fetchit7_field_par_fld_desc' => array(
			'label'						=> $t('Parameter descriptions'),
			'settings'				=> array (
					'max_length'	=> '255',
			),
			'field_name'			=> 'fetchit7_field_par_fld_desc',
			'type'						=> 'text',
			'module'					=> 'text',
			'active'					=> '1',
			'locked'					=> '0',
			'cardinality'			=> '-1',
		),
		// parameter field types
		'fetchit7_field_par_fld_type' => array(
			'label'						=> $t('Parameter input control types'),
			'settings'				=> array (
					'max_length'	=> '60',
			),
			'field_name'			=> 'fetchit7_field_par_fld_type',
			'type'						=> 'text',
			'module'					=> 'text',
			'active'					=> '1',
			'locked'					=> '0',
			'cardinality'			=> '-1',
		),
		// parameter field weights
		'fetchit7_field_par_fld_weight' => array(
			'label'						=> $t('Parameter input control weights'),
			'settings'				=> array (
					'max_length'	=> '10',
			),
			'field_name'			=> 'fetchit7_field_par_fld_weight',
			'type'						=> 'text',
			'module'					=> 'text',
			'active'					=> '1',
			'locked'					=> '0',
			'cardinality'			=> '-1',
		),

		// parameter field enabled
		'fetchit7_field_par_fld_enabled' => array(
			'label'						=> $t('Parameter input control enabled'),
			'settings'				=> array (
					'max_length'	=> '60',
			),
			'field_name'			=> 'fetchit7_field_par_fld_enabled',
			'type'						=> 'text',
			'module'					=> 'text',
			'active'					=> '1',
			'locked'					=> '0',
			'cardinality'			=> '-1',
		),
		// parameter field required
		'fetchit7_field_par_fld_required' => array(
			'label'						=> $t('Parameter input value required'),
			'settings'				=> array (
					'max_length'	=> '60',
			),
			'field_name'			=> 'fetchit7_field_par_fld_required',
			'type'						=> 'text',
			'module'					=> 'text',
			'active'					=> '1',
			'locked'					=> '0',
			'cardinality'			=> '-1',
		),
		// parameter field parameter string
		'fetchit7_field_par_fld_parstr' => array(
			'label'						=> $t('Additional parameters string'),
			'settings'				=> array (
					'max_length'	=> '60',
			),
			'field_name'			=> 'fetchit7_field_par_fld_parstr',
			'type'						=> 'text',
			'module'					=> 'text',
			'active'					=> '1',
			'locked'					=> '0',
			'cardinality'			=> '-1',
		),
		// parameter field value list table
		'fetchit7_field_par_fld_list_tbl' => array(
			'label'						=> $t('Parameter input list table'),
			'settings'				=> array (
					'max_length'	=> '60',
			),
			'field_name'			=> 'fetchit7_field_par_fld_list_tbl',
			'type'						=> 'text',
			'module'					=> 'text',
			'active'					=> '1',
			'locked'					=> '0',
			'cardinality'			=> '-1',
		),
		// parameter field value list table key field
		'fetchit7_field_par_fld_list_key' => array(
			'label'						=> $t('Parameter input list table key field'),
			'settings'				=> array (
					'max_length'	=> '60',
			),
			'field_name'			=> 'fetchit7_field_par_fld_list_key',
			'type'						=> 'text',
			'module'					=> 'text',
			'active'					=> '1',
			'locked'					=> '0',
			'cardinality'			=> '-1',
		),
		// parameter field value list table display field
		'fetchit7_field_par_fld_list_dsp' => array(
			'label'						=> $t('Parameter input list table display field'),
			'settings'				=> array (
					'max_length'	=> '60',
			),
			'field_name'			=> 'fetchit7_field_par_fld_list_dsp',
			'type'						=> 'text',
			'module'					=> 'text',
			'active'					=> '1',
			'locked'					=> '0',
			'cardinality'			=> '-1',
		),
		// parameter field value list table uid field
		'fetchit7_field_par_fld_list_uid' => array(
			'label'						=> $t('Parameter input list table uid field'),
			'settings'				=> array (
					'max_length'	=> '60',
			),
			'field_name'			=> 'fetchit7_field_par_fld_list_uid',
			'type'						=> 'text',
			'module'					=> 'text',
			'active'					=> '1',
			'locked'					=> '0',
			'cardinality'			=> '-1',
		),
		// parameter field value list table default key value
		'fetchit7_field_par_fld_list_def' => array(
			'label'						=> $t('Parameter input default value'),
			'settings'				=> array (
					'max_length'	=> '60',
			),
			'field_name'			=> 'fetchit7_field_par_fld_list_def',
			'type'						=> 'text',
			'module'					=> 'text',
			'active'					=> '1',
			'locked'					=> '0',
			'cardinality'			=> '-1',
		),
		// parameter field selection data table
		'fetchit7_field_par_fld_data_tbl' => array(
			'label'						=> $t('Parameter output data table'),
			'settings'				=> array (
					'max_length'	=> '60',
			),
			'field_name'			=> 'fetchit7_field_par_fld_data_tbl',
			'type'						=> 'text',
			'module'					=> 'text',
			'active'					=> '1',
			'locked'					=> '0',
			'cardinality'			=> '-1',
		),
		// parameter field selection data table key field
		'fetchit7_field_par_fld_data_key' => array(
			'label'						=> $t('Parameter output data table key field'),
			'settings'				=> array (
					'max_length'	=> '60',
			),
			'field_name'			=> 'fetchit7_field_par_fld_data_key',
			'type'						=> 'text',
			'module'					=> 'text',
			'active'					=> '1',
			'locked'					=> '0',
			'cardinality'			=> '-1',
		),
		// parameter field selection data table uid field
		'fetchit7_field_par_fld_data_uid' => array(
			'label'						=> $t('Parameter output data table uid field'),
			'settings'				=> array (
					'max_length'	=> '60',
			),
			'field_name'			=> 'fetchit7_field_par_fld_data_uid',
			'type'						=> 'text',
			'module'					=> 'text',
			'active'					=> '1',
			'locked'					=> '0',
			'cardinality'			=> '-1',
		),
		
		//'12345678901234567890123456789012'
		//'fetchit7_field_par_tbl_rows' //integer

		//'12345678901234567890123456789012'
		// comma delimited lists in a large text field
		//'fetchit7_field_par_fld_name'  // parameter field names
		//'fetchit7_field_par_fld_title' // parameter field titles
		//'fetchit7_field_par_fld_desc'  // parameter field descriptions - necessary? if so gotta be a large text field, not varchar limited to 255
		//'fetchit7_field_par_fld_type' // parameter field types, short names
		//'fetchit7_field_par_fld_enabled' // parameter field enabled
		//'fetchit7_field_par_fld_required' => array(
		//'fetchit7_field_par_fld_validate' => array(
		//'fetchit7_field_par_fld_submit' => array(
		//'fetchit7_field_par_fld_parstr' => array(
				
		//'12345678901234567890123456789012'
		//'fetchit7_field_par_fld_list_tbl' => array(
		//'fetchit7_field_par_fld_list_key' => array(
		//'fetchit7_field_par_fld_list_dsp' => array(
		//'fetchit7_field_par_fld_list_uid' => array(
		//'fetchit7_field_par_fld_list_def' => array(
		//'fetchit7_field_par_fld_data_tbl' => array(
		//'fetchit7_field_par_fld_data_key' => array(
		//'fetchit7_field_par_fld_data_uid' => array(
		
	);
	
	return $fetchit7_fields;
}


/**
 * function that returns an array of all the field instances created by this module for the fetchit7_content_table content type
 * 
 * the best way to figure this out is using drush and the devel module:
 * drush ev 'print var_export(field_info_instance("entity_type","field_name","bundle_name"));'
 * e.g. drush ev 'print var_export(field_info_instance("node","fetchit7_field_location","fetchit7_content_table"));'
 **/
function _fetchit7_content_table_installed_instances () {
	$content_name = 'fetchit7_content_table';
	$t = get_t();
	$fetchit7_instances = array(
		// on this example I am including many of the instance definition parameters in the array
		//   but commenting out the ones I think I should let drupal 7 handle with defaults for now
		//'fetchit7_field_location' => array(
			//'label'					=> $t('form output location'),
			//'type'					=> 'list_integer',
			//'widget'				=> array(
			//	//'type'					=> 'options_select', // dropdown list
			//	'type'					=> 'options_buttons', // radio buttons or check boxes
			//	'module'				=> 'options',
			//	'settings'			=> array (),
			//	//'weight'				=> -3,
			//),
			//'required'			=> TRUE,
			//'description'		=> $t('This parameter tells fetchit7 where to display the form: 0 - not displayed, 1 - page, 2 - block'),
			//'default_value'	=> array(
			//	0								=> array(
			//		'value'					=> '2',
			//	),
			//),
			//'settings'			=> array (
			//	'user_register_form' => FALSE,
			//),
			//'display'				=> array (
			//	'default'				=> array (
			//		'label'					=> 'above',
			//		'type'					=> 'list_default',
			//		'settings'			=> array (),
			//		'module'				=> 'list',
			//		'weight'				=> 1,
			//	),
			//	'teaser'			=> array (
			//		'label'					=> 'above',
			//		'type'					=> 'hidden',
			//		'settings'			=> array (),
			//		'weight'				=> 0,
			//	),
			//),
			//'id'						=> 28,
			//'field_id'			=> 10,
			//'field_name'		=> 'fetchit7_field_location',
			//'entity_type'		=> 'node',
			//'bundle'				=> $content_name,
			//'deleted'				=> '0',
		//),
		// the rest will be defined in a more compressed fashion
		// =====================================================
		// these are fields that apply to multiple content types
		// =====================================================
		// form location
		'fetchit7_field_location' => array(
			'label'					=> $t('form output location'),
			'widget'				=> array(
				//'type'					=> 'options_select', // dropdown list
				'type'					=> 'options_buttons', // radio buttons or check boxes
				'module'				=> 'options',
				'active'				=> TRUE,
				'settings'			=> array (),
				//'weight'				=> -3,
			),
			'required'			=> TRUE,
			'description'		=> $t('This parameter tells fetchit7 where to display the form: none, page, block'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> 'block',
				),
			),
			'field_name'		=> 'fetchit7_field_location',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		// form enabled
		'fetchit7_field_enabled' => array(
			'label'					=> $t('Form output enabled'),
			'widget'				=> array(
				'type'					=> 'options_onoff',
				'module'				=> 'options',
				'active'				=> TRUE,
				'settings'			=> array (
					'display_label'	=> TRUE,
				),
				//'weight'				=> -3,
			),
			'required'			=> FALSE,
			'description'		=> $t('This parameter defines whether the form is enabled for output or not.'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '1',
				),
			),
			'field_name'		=> 'fetchit7_field_enabled',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		// database server host name
		'fetchit7_field_db_host' => array(
			'label'					=> $t('Database server host name'),
			'widget'				=> array(
				'type'					=> 'text_textfield',
				'module'				=> 'text',
				'active'				=> TRUE,
				'settings'			=> array (
					'size'					=> '30',
				),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'text_processing'	=> '0',
				'user_register_form'	=> FALSE,
			),
			'required'			=> FALSE,
			'description'		=> $t('The host name of the database server.'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> 'localhost',
				),
			),
			'field_name'		=> 'fetchit7_field_db_host',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		// database server type
		'fetchit7_field_db_type' => array(
			'label'					=> $t('Database server type'),
			'widget'				=> array(
				//'type'					=> 'options_select', // dropdown list
				'type'					=> 'options_buttons', // radio buttons or check boxes
				'module'				=> 'options',
				'active'				=> TRUE,
				'settings'			=> array (),
				//'weight'				=> -3,
			),
			'required'			=> TRUE,
			'description'		=> $t('The database server software type: postgresql, mysql, sqlserver'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> 'postgresql',
				),
			),
			'field_name'		=> 'fetchit7_field_db_type',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		// database server port
		'fetchit7_field_db_port' => array(
			'label'					=> $t('Database server port number'),
			'widget'				=> array(
				'type'					=> 'number',
				'module'				=> 'number',
				'active'				=> FALSE,
				'settings'			=> array (),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'min'	=> '0',
				'max'	=> '65000',
				'prefix'	=> 'prefix string',
				'suffix'	=> 'suffix string',
			),
			'required'			=> FALSE,
			'description'		=> $t('The database server port number used for network connections.'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '5432',
				),
			),
			'field_name'		=> 'fetchit7_field_db_port',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		// database name
		'fetchit7_field_db_name' => array(
			'label'					=> $t('Database name'),
			'widget'				=> array(
				'type'					=> 'text_textfield',
				'module'				=> 'text',
				'active'				=> TRUE,
				'settings'			=> array (
					'size'					=> '30',
				),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'text_processing'	=> '0',
				'user_register_form'	=> FALSE,
			),
			'required'			=> FALSE,
			'description'		=> $t('The name of the database to connect to.'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '',
				),
			),
			'field_name'		=> 'fetchit7_field_db_name',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		// database user login
		'fetchit7_field_db_login' => array(
			'label'					=> $t('Database user login'),
			'widget'				=> array(
				'type'					=> 'text_textfield',
				'module'				=> 'text',
				'active'				=> TRUE,
				'settings'			=> array (
					'size'					=> '30',
				),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'text_processing'	=> '0',
				'user_register_form'	=> FALSE,
			),
			'required'			=> FALSE,
			'description'		=> $t('The database user login'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '',
				),
			),
			'field_name'		=> 'fetchit7_field_db_login',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		// database user password
		'fetchit7_field_db_password' => array(
			'label'					=> $t('Database user password'),
			'widget'				=> array(
				'type'					=> 'text_textfield',
				'module'				=> 'text',
				'active'				=> TRUE,
				'settings'			=> array (
					'size'					=> '30',
				),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'text_processing'	=> '0',
				'user_register_form'	=> FALSE,
			),
			'required'			=> FALSE,
			'description'		=> $t('The database user password'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '',
				),
			),
			'field_name'		=> 'fetchit7_field_db_password',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		// pre-(form display) query (SQL) or function name (php function)
		'fetchit7_field_pre_function' => array(
			'label'					=> $t('Pre-(form display) SQL query or php.function'),
			'widget'				=> array(
				'type'					=> 'text_textfield',
				'module'				=> 'text',
				'active'				=> TRUE,
				'settings'			=> array (
					'size'					=> '60',
				),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'text_processing'	=> '0',
				'user_register_form'	=> FALSE,
			),
			'required'			=> FALSE,
			'description'		=> $t('A query (SQL) or the name of a php function (prepend with php.) to execute before displaying this form.'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '',
				),
			),
			'field_name'		=> 'fetchit7_field_pre_function',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		// post-(form submit) SQL query or PHP.function
		'fetchit7_field_post_function' => array(
			'label'					=> $t('Post-(form submit) SQL query or php.function'),
			'widget'				=> array(
				'type'					=> 'text_textfield',
				'module'				=> 'text',
				'active'				=> TRUE,
				'settings'			=> array (
					'size'					=> '60',
				),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'text_processing'	=> '0',
				'user_register_form'	=> FALSE,
			),
			'required'			=> FALSE,
			'description'		=> $t('A query (SQL) or the name of a php function (prepend with php.) to execute after the form data has been submitted.'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '',
				),
			),
			'field_name'		=> 'fetchit7_field_post_function',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		// database source data table/view name
		'fetchit7_field_source_view' => array(
			'label'					=> $t('Source data view'),
			'widget'				=> array(
				'type'					=> 'text_textfield',
				'module'				=> 'text',
				'active'				=> TRUE,
				'settings'			=> array (
					'size'					=> '30',
				),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'text_processing'	=> '0',
				'user_register_form'	=> FALSE,
			),
			'required'			=> FALSE,
			'description'		=> $t('Database source data table/view name'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '',
				),
			),
			'field_name'		=> 'fetchit7_field_source_view',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		// drupal user id (uid) field name
		'fetchit7_field_uid_field' => array(
			'label'					=> $t('User id (uid) field'),
			'widget'				=> array(
				'type'					=> 'text_textfield',
				'module'				=> 'text',
				'active'				=> TRUE,
				'settings'			=> array (
					'size'					=> '30',
				),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'text_processing'	=> '0',
				'user_register_form'	=> FALSE,
			),
			'required'			=> FALSE,
			'description'		=> $t('Drupal user ID (uid) field name.  Used in where clauses of queries and helps the drupal site developer keep each users data separate.'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '',
				),
			),
			'field_name'		=> 'fetchit7_field_uid_field',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		// key field name
		'fetchit7_field_key_field' => array(
			'label'					=> $t('Key field name'),
			'widget'				=> array(
				'type'					=> 'text_textfield',
				'module'				=> 'text',
				'active'				=> TRUE,
				'settings'			=> array (
					'size'					=> '30',
				),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'text_processing'	=> '0',
				'user_register_form'	=> FALSE,
			),
			'required'			=> FALSE,
			'description'		=> $t('The source table/view and selection table key field name.  This field (and uid field) is copied to the selection table when copy is selection type.'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '',
				),
			),
			'field_name'		=> 'fetchit7_field_key_field',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		'fetchit7_field_table_weight' => array(
			'label'					=> $t('Table weight'),
			'type'					=> 'list_integer',
			'widget'				=> array(
				'type'					=> 'options_select', // dropdown list
				//'type'					=> 'options_buttons', // radio buttons or check boxes
				'module'				=> 'options',
				'settings'			=> array (),
				//'weight'				=> -3,
			),
			'required'			=> TRUE,
			'description'		=> $t('This parameter tells fetchit7 where on the form to display the table (relative to other form elements).'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '-8',
				),
			),
			//'settings'			=> array (
			//	'user_register_form' => FALSE,
			//),
			//'display'				=> array (
			//	'default'				=> array (
			//		'label'					=> 'above',
			//		'type'					=> 'list_default',
			//		'settings'			=> array (),
			//		'module'				=> 'list',
			//		'weight'				=> 1,
			//	),
			//	'teaser'			=> array (
			//		'label'					=> 'above',
			//		'type'					=> 'hidden',
			//		'settings'			=> array (),
			//		'weight'				=> 0,
			//	),
			//),
			//'id'						=> 28,
			//'field_id'			=> 10,
			'field_name'		=> 'fetchit7_field_table_weight',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
			//'deleted'				=> '0',
		),
		// submit button label
		'fetchit7_field_submit_label' => array(
			'label'					=> $t('Submit button label'),
			'widget'				=> array(
				'type'					=> 'text_textfield',
				'module'				=> 'text',
				'active'				=> TRUE,
				'settings'			=> array (
					'size'					=> '30',
				),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'text_processing'	=> '0',
				'user_register_form'	=> FALSE,
			),
			'required'			=> FALSE,
			'description'		=> $t('A label to put on the submit button on this form. 
On copy single, copy multiple, or delete multiple tables a button is automatically added 
and this will overwrite the default label.  On plain tables, a submit button is not 
automatically added, but specifying a label here will cause a button to be added to the form.'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '',
				),
			),
			'field_name'		=> 'fetchit7_field_submit_label',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		'fetchit7_field_submit_weight' => array(
			'label'					=> $t('Submit button weight'),
			'type'					=> 'list_integer',
			'widget'				=> array(
				'type'					=> 'options_select', // dropdown list
				//'type'					=> 'options_buttons', // radio buttons or check boxes
				'module'				=> 'options',
				'settings'			=> array (),
				//'weight'				=> -3,
			),
			'required'			=> TRUE,
			'description'		=> $t('This parameter tells fetchit7 where on the form to display the submit button (relative to other form elements).'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '8',
				),
			),
			//'settings'			=> array (
			//	'user_register_form' => FALSE,
			//),
			//'display'				=> array (
			//	'default'				=> array (
			//		'label'					=> 'above',
			//		'type'					=> 'list_default',
			//		'settings'			=> array (),
			//		'module'				=> 'list',
			//		'weight'				=> 1,
			//	),
			//	'teaser'			=> array (
			//		'label'					=> 'above',
			//		'type'					=> 'hidden',
			//		'settings'			=> array (),
			//		'weight'				=> 0,
			//	),
			//),
			//'id'						=> 28,
			//'field_id'			=> 10,
			'field_name'		=> 'fetchit7_field_submit_weight',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
			//'deleted'				=> '0',
		),
		// submit button redirect
		'fetchit7_field_submit_redirect' => array(
			'label'					=> $t('Submit button redirect'),
			'widget'				=> array(
				'type'					=> 'text_textfield',
				'module'				=> 'text',
				'active'				=> TRUE,
				'settings'			=> array (
					'size'					=> '30',
				),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'text_processing'	=> '0',
				'user_register_form'	=> FALSE,
			),
			'required'			=> FALSE,
			'description'		=> $t('A page URL (e.g. node/10) for Drupal to redirect the user to after a successful form submission caused by pressing this submit button.'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '',
				),
			),
			'field_name'		=> 'fetchit7_field_submit_redirect',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
				
		// =====================================================
		// these are fields that apply to html tables
		// =====================================================
		// table record selection type
		'fetchit7_field_tbl_sel_typ' => array(
			'label'					=> $t('table selection type'),
			'widget'				=> array(
				//'type'					=> 'options_select', // dropdown list
				'type'					=> 'options_buttons', // radio buttons or check boxes
				'module'				=> 'options',
				'active'				=> TRUE,
				'settings'			=> array (),
				//'weight'				=> -3,
			),
			'required'			=> TRUE,
			'description'		=> $t('Defines the selection type (single or multiple) and also what happens to the selected table records when the submit button is pressed (copy or delete).'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> 'none',
				),
			),
			'field_name'		=> 'fetchit7_field_tbl_sel_typ',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		// table record selection output table
		'fetchit7_field_tbl_sel_tbl' => array(
			'label'					=> $t('Record selection output table'),
			'widget'				=> array(
				'type'					=> 'text_textfield',
				'module'				=> 'text',
				'active'				=> TRUE,
				'settings'			=> array (
					'size'					=> '30',
				),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'text_processing'	=> '0',
				'user_register_form'	=> FALSE,
			),
			'required'			=> FALSE,
			'description'		=> $t('The database table into which the key fields from the selected records are inserted.'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '',
				),
			),
			'field_name'		=> 'fetchit7_field_tbl_sel_tbl',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		
		
	);
	
	return $fetchit7_instances;
}


/**
 * function that returns an array of all the field instances created by this module for the fetchit7_content_param content type
 * 
 * the best way to figure this out is using drush and the devel module:
 * drush ev 'print var_export(field_info_instance("entity_type","field_name","bundle_name"));'
 * e.g. drush ev 'print var_export(field_info_instance("node","fetchit7_field_location","fetchit7_content_param"));'
 **/
function _fetchit7_content_param_installed_instances () {
	$content_name = 'fetchit7_content_param';
	$t = get_t();
	$fetchit7_instances = array(
		// on this example I am including many of the instance definition parameters in the array
		//   but commenting out the ones I think I should let drupal 7 handle with defaults for now
		//'fetchit7_field_location' => array(
			//'label'					=> $t('form output location'),
			//'type'					=> 'list_integer',
			//'widget'				=> array(
			//	//'type'					=> 'options_select', // dropdown list
			//	'type'					=> 'options_buttons', // radio buttons or check boxes
			//	'module'				=> 'options',
			//	'settings'			=> array (),
			//	//'weight'				=> -3,
			//),
			//'required'			=> TRUE,
			//'description'		=> $t('This parameter tells fetchit7 where to display the form: 0 - not displayed, 1 - page, 2 - block'),
			//'default_value'	=> array(
			//	0								=> array(
			//		'value'					=> '2',
			//	),
			//),
			//'settings'			=> array (
			//	'user_register_form' => FALSE,
			//),
			//'display'				=> array (
			//	'default'				=> array (
			//		'label'					=> 'above',
			//		'type'					=> 'list_default',
			//		'settings'			=> array (),
			//		'module'				=> 'list',
			//		'weight'				=> 1,
			//	),
			//	'teaser'			=> array (
			//		'label'					=> 'above',
			//		'type'					=> 'hidden',
			//		'settings'			=> array (),
			//		'weight'				=> 0,
			//	),
			//),
			//'id'						=> 28,
			//'field_id'			=> 10,
			//'field_name'		=> 'fetchit7_field_location',
			//'entity_type'		=> 'node',
			//'bundle'				=> $content_name,
			//'deleted'				=> '0',
		//),
		// the rest will be defined in a more compressed fashion
		// =====================================================
		// these are fields that apply to multiple content types
		// =====================================================
		// form location
		'fetchit7_field_location' => array(
			'label'					=> $t('form output location'),
			'widget'				=> array(
				//'type'					=> 'options_select', // dropdown list
				'type'					=> 'options_buttons', // radio buttons or check boxes
				'module'				=> 'options',
				'active'				=> TRUE,
				'settings'			=> array (),
				//'weight'				=> -3,
			),
			'required'			=> TRUE,
			'description'		=> $t('This parameter tells fetchit7 where to display the form: none, page, block'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> 'block',
				),
			),
			'field_name'		=> 'fetchit7_field_location',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		// form enabled
		'fetchit7_field_enabled' => array(
			'label'					=> $t('Form output enabled'),
			'widget'				=> array(
				'type'					=> 'options_onoff',
				'module'				=> 'options',
				'active'				=> TRUE,
				'settings'			=> array (
					'display_label'	=> TRUE,
				),
				//'weight'				=> -3,
			),
			'required'			=> FALSE,
			'description'		=> $t('This parameter defines whether the form is enabled for output or not.'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '1',
				),
			),
			'field_name'		=> 'fetchit7_field_enabled',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		// database server host name
		'fetchit7_field_db_host' => array(
			'label'					=> $t('Database server host name'),
			'widget'				=> array(
				'type'					=> 'text_textfield',
				'module'				=> 'text',
				'active'				=> TRUE,
				'settings'			=> array (
					'size'					=> '30',
				),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'text_processing'	=> '0',
				'user_register_form'	=> FALSE,
			),
			'required'			=> FALSE,
			'description'		=> $t('The host name of the database server.'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> 'localhost',
				),
			),
			'field_name'		=> 'fetchit7_field_db_host',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		// database server type
		'fetchit7_field_db_type' => array(
			'label'					=> $t('Database server type'),
			'widget'				=> array(
				//'type'					=> 'options_select', // dropdown list
				'type'					=> 'options_buttons', // radio buttons or check boxes
				'module'				=> 'options',
				'active'				=> TRUE,
				'settings'			=> array (),
				//'weight'				=> -3,
			),
			'required'			=> TRUE,
			'description'		=> $t('The database server software type: postgresql, mysql, sqlserver'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> 'postgresql',
				),
			),
			'field_name'		=> 'fetchit7_field_db_type',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		// database server port
		'fetchit7_field_db_port' => array(
			'label'					=> $t('Database server port number'),
			'widget'				=> array(
				'type'					=> 'number',
				'module'				=> 'number',
				'active'				=> FALSE,
				'settings'			=> array (),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'min'	=> '0',
				'max'	=> '65000',
				'prefix'	=> 'prefix string',
				'suffix'	=> 'suffix string',
			),
			'required'			=> FALSE,
			'description'		=> $t('The database server port number used for network connections.'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '5432',
				),
			),
			'field_name'		=> 'fetchit7_field_db_port',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		// database name
		'fetchit7_field_db_name' => array(
			'label'					=> $t('Database name'),
			'widget'				=> array(
				'type'					=> 'text_textfield',
				'module'				=> 'text',
				'active'				=> TRUE,
				'settings'			=> array (
					'size'					=> '30',
				),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'text_processing'	=> '0',
				'user_register_form'	=> FALSE,
			),
			'required'			=> FALSE,
			'description'		=> $t('The name of the database to connect to.'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '',
				),
			),
			'field_name'		=> 'fetchit7_field_db_name',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		// database user login
		'fetchit7_field_db_login' => array(
			'label'					=> $t('Database user login'),
			'widget'				=> array(
				'type'					=> 'text_textfield',
				'module'				=> 'text',
				'active'				=> TRUE,
				'settings'			=> array (
					'size'					=> '30',
				),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'text_processing'	=> '0',
				'user_register_form'	=> FALSE,
			),
			'required'			=> FALSE,
			'description'		=> $t('The database user login'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '',
				),
			),
			'field_name'		=> 'fetchit7_field_db_login',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		// database user password
		'fetchit7_field_db_password' => array(
			'label'					=> $t('Database user password'),
			'widget'				=> array(
				'type'					=> 'text_textfield',
				'module'				=> 'text',
				'active'				=> TRUE,
				'settings'			=> array (
					'size'					=> '30',
				),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'text_processing'	=> '0',
				'user_register_form'	=> FALSE,
			),
			'required'			=> FALSE,
			'description'		=> $t('The database user password'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '',
				),
			),
			'field_name'		=> 'fetchit7_field_db_password',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		// pre-(form display) query (SQL) or function name (php function)
		'fetchit7_field_pre_function' => array(
			'label'					=> $t('Pre-(form display) SQL query or php.function'),
			'widget'				=> array(
				'type'					=> 'text_textfield',
				'module'				=> 'text',
				'active'				=> TRUE,
				'settings'			=> array (
					'size'					=> '60',
				),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'text_processing'	=> '0',
				'user_register_form'	=> FALSE,
			),
			'required'			=> FALSE,
			'description'		=> $t('A query (SQL) or the name of a php function (prepend with php.) to execute before displaying this form.'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '',
				),
			),
			'field_name'		=> 'fetchit7_field_pre_function',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		// post-(form submit) SQL query or PHP.function
		'fetchit7_field_post_function' => array(
			'label'					=> $t('Post-(form submit) SQL query or php.function'),
			'widget'				=> array(
				'type'					=> 'text_textfield',
				'module'				=> 'text',
				'active'				=> TRUE,
				'settings'			=> array (
					'size'					=> '60',
				),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'text_processing'	=> '0',
				'user_register_form'	=> FALSE,
			),
			'required'			=> FALSE,
			'description'		=> $t('A query (SQL) or the name of a php function (prepend with php.) to execute after the form data has been submitted.'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '',
				),
			),
			'field_name'		=> 'fetchit7_field_post_function',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		// submit button label
		'fetchit7_field_submit_label' => array(
			'label'					=> $t('Submit button label'),
			'widget'				=> array(
				'type'					=> 'text_textfield',
				'module'				=> 'text',
				'active'				=> TRUE,
				'settings'			=> array (
					'size'					=> '30',
				),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'text_processing'	=> '0',
				'user_register_form'	=> FALSE,
			),
			'required'			=> FALSE,
			'description'		=> $t('A label to put on the submit button on this form.'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> 'Submit',
				),
			),
			'field_name'		=> 'fetchit7_field_submit_label',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		// submit button weight
		'fetchit7_field_submit_weight' => array(
			'label'					=> $t('Submit button weight'),
			'type'					=> 'list_integer',
			'widget'				=> array(
				'type'					=> 'options_select', // dropdown list
				//'type'					=> 'options_buttons', // radio buttons or check boxes
				'module'				=> 'options',
				'settings'			=> array (),
				//'weight'				=> -3,
			),
			'required'			=> TRUE,
			'description'		=> $t('This parameter tells fetchit7 where on the form to display the submit button (relative to other form elements).'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '8',
				),
			),
			//'settings'			=> array (
			//	'user_register_form' => FALSE,
			//),
			//'display'				=> array (
			//	'default'				=> array (
			//		'label'					=> 'above',
			//		'type'					=> 'list_default',
			//		'settings'			=> array (),
			//		'module'				=> 'list',
			//		'weight'				=> 1,
			//	),
			//	'teaser'			=> array (
			//		'label'					=> 'above',
			//		'type'					=> 'hidden',
			//		'settings'			=> array (),
			//		'weight'				=> 0,
			//	),
			//),
			//'id'						=> 28,
			//'field_id'			=> 10,
			'field_name'		=> 'fetchit7_field_submit_weight',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
			//'deleted'				=> '0',
		),
		// submit button redirect
		'fetchit7_field_submit_redirect' => array(
			'label'					=> $t('Submit button redirect'),
			'widget'				=> array(
				'type'					=> 'text_textfield',
				'module'				=> 'text',
				'active'				=> TRUE,
				'settings'			=> array (
					'size'					=> '30',
				),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'text_processing'	=> '0',
				'user_register_form'	=> FALSE,
			),
			'required'			=> FALSE,
			'description'		=> $t('A page URL (e.g. node/10) for Drupal to redirect the user to after a successful form submission caused by pressing this submit button.'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '',
				),
			),
			'field_name'		=> 'fetchit7_field_submit_redirect',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		
		// =====================================================
		// these are fields that apply to parameter input only
		// =====================================================
		// show titles
		'fetchit7_field_par_shw_ttl' => array(
			'label'					=> $t('Show titles'),
			'widget'				=> array(
				'type'					=> 'options_onoff',
				'module'				=> 'options',
				'active'				=> TRUE,
				'settings'			=> array (
					'display_label'	=> TRUE,
				),
				//'weight'				=> -3,
			),
			'required'			=> FALSE,
			'description'		=> $t('This parameter defines whether titles are displayed on every parameter control on the form.  The form can get messy (too busy) with too many titles.'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '1',
				),
			),
			'field_name'		=> 'fetchit7_field_par_shw_ttl',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		//Parameter table row count
		'fetchit7_field_par_tbl_rows' => array(
			'label'					=> $t('Parameter table row count'),
			'type'					=> 'list_integer',
			'widget'				=> array(
				'type'					=> 'options_select', // dropdown list
				//'type'					=> 'options_buttons', // radio buttons or check boxes
				'module'				=> 'options',
				'settings'			=> array (),
				//'weight'				=> -3,
			),
			'required'			=> TRUE,
			'description'		=> $t('Number of rows in the table of parameter input controls.  Enter 0 to output controls in a stack ordered by weight (NOT a table).'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> 3,
				),
			),
			//'settings'			=> array (
			//	'user_register_form' => FALSE,
			//),
			//'display'				=> array (
			//	'default'				=> array (
			//		'label'					=> 'above',
			//		'type'					=> 'list_default',
			//		'settings'			=> array (),
			//		'module'				=> 'list',
			//		'weight'				=> 1,
			//	),
			//	'teaser'			=> array (
			//		'label'					=> 'above',
			//		'type'					=> 'hidden',
			//		'settings'			=> array (),
			//		'weight'				=> 0,
			//	),
			//),
			//'id'						=> 28,
			//'field_id'			=> 10,
			'field_name'		=> 'fetchit7_field_par_tbl_rows',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
			//'deleted'				=> '0',
		),
		// parameter field name
		'fetchit7_field_par_fld_name' => array(
			'label'					=> $t('Parameter name'),
			'widget'				=> array(
				'type'					=> 'text_textfield',
				'module'				=> 'text',
				'active'				=> TRUE,
				'settings'			=> array (
					'size'					=> '30',
				),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'text_processing'	=> '0',
				'user_register_form'	=> FALSE,
			),
			'required'			=> FALSE,
			'description'		=> $t('The parameter name. fetchit7 will create a control for each parameter name specified here.'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '',
				),
			),
			'field_name'		=> 'fetchit7_field_par_fld_name',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		// parameter field title
		'fetchit7_field_par_fld_title' => array(
			'label'					=> $t('Parameter input control title.'),
			'widget'				=> array(
				'type'					=> 'text_textfield',
				'module'				=> 'text',
				'active'				=> TRUE,
				'settings'			=> array (
					'size'					=> '30',
				),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'text_processing'	=> '0',
				'user_register_form'	=> FALSE,
			),
			'required'			=> FALSE,
			'description'		=> $t('A title to put above the parameter input control.'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '',
				),
			),
			'field_name'		=> 'fetchit7_field_par_fld_title',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		// parameter field description
		'fetchit7_field_par_fld_desc' => array(
			'label'					=> $t('Parameter description'),
			'widget'				=> array(
				'type'					=> 'text_textfield',
				'module'				=> 'text',
				'active'				=> TRUE,
				'settings'			=> array (
					'size'					=> '60',
				),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'text_processing'	=> '0',
				'user_register_form'	=> FALSE,
			),
			'required'			=> FALSE,
			'description'		=> $t('A description to put below the parameter input control.'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '',
				),
			),
			'field_name'		=> 'fetchit7_field_par_fld_desc',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		// Parameter input control type
		'fetchit7_field_par_fld_type' => array(
			'label'					=> $t('Parameter input control type'),
			'widget'				=> array(
				'type'					=> 'text_textfield',
				'module'				=> 'text',
				'active'				=> TRUE,
				'settings'			=> array (
					'size'					=> '20',
				),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'text_processing'	=> '0',
				'user_register_form'	=> FALSE,
			),
			'required'			=> FALSE,
			'description'		=> $t('The type of input control to use for entering data for this parameter: [textbox, dropdown_single, dropdown_multiple, radio_buttons, checkboxes, checkbox, date_popup, date_select, datetime_select]'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> 'textbox',
				),
			),
			'field_name'		=> 'fetchit7_field_par_fld_type',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		// Parameter input control weight
		'fetchit7_field_par_fld_weight' => array(
			'label'					=> $t('Parameter input control weight'),
			'widget'				=> array(
				'type'					=> 'text_textfield',
				'module'				=> 'text',
				'active'				=> TRUE,
				'settings'			=> array (
					'size'					=> 5,
				),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'text_processing'	=> '0',
				'user_register_form'	=> FALSE,
			),
			'required'			=> FALSE,
			'description'		=> $t('The input control weight is an integer -20 to 20 that determines the order in which multiple controls are displayed when NOT in a table (rows = 0). Lower numbers float to the top.'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '0',
				),
			),
			'field_name'		=> 'fetchit7_field_par_fld_weight',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		// fetchit7_field_par_fld_enabled
		'fetchit7_field_par_fld_enabled' => array(
			'label'					=> $t('Parameter input control enabled'),
			'widget'				=> array(
				'type'					=> 'text_textfield',
				'module'				=> 'text',
				'active'				=> TRUE,
				'settings'			=> array (
					'size'					=> '10',
				),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'text_processing'	=> '0',
				'user_register_form'	=> FALSE,
			),
			'required'			=> FALSE,
			'description'		=> $t('Whether this parameter control is enabled for input. Enter true or false.'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> 'true',
				),
			),
			'field_name'		=> 'fetchit7_field_par_fld_enabled',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		// fetchit7_field_par_fld_required
		'fetchit7_field_par_fld_required' => array(
			'label'					=> $t('Parameter input value required'),
			'widget'				=> array(
				'type'					=> 'text_textfield',
				'module'				=> 'text',
				'active'				=> TRUE,
				'settings'			=> array (
					'size'					=> '10',
				),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'text_processing'	=> '0',
				'user_register_form'	=> FALSE,
			),
			'required'			=> FALSE,
			'description'		=> $t('Whether this parameter control requires an input value to be selected/entered before submitting the form.'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> 'false',
				),
			),
			'field_name'		=> 'fetchit7_field_par_fld_required',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		// fetchit7_field_par_fld_parstr
		'fetchit7_field_par_fld_parstr' => array(
			'label'					=> $t('Additional parameters string'),
			'widget'				=> array(
				'type'					=> 'text_textfield',
				'module'				=> 'text',
				'active'				=> TRUE,
				'settings'			=> array (
					'size'					=> '30',
				),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'text_processing'	=> '0',
				'user_register_form'	=> FALSE,
			),
			'required'			=> FALSE,
			'description'		=> $t('This string allows additional input control parameters to be entered for some controls.  Name:Value pairs (each pair separated by a semicolon).  Example: size:15;size:15'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '',
				),
			),
			'field_name'		=> 'fetchit7_field_par_fld_parstr',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		//parameter field value list table
		'fetchit7_field_par_fld_list_tbl' => array(
			'label'					=> $t('Parameter input list table'),
			'widget'				=> array(
				'type'					=> 'text_textfield',
				'module'				=> 'text',
				'active'				=> TRUE,
				'settings'			=> array (
					'size'					=> '30',
				),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'text_processing'	=> '0',
				'user_register_form'	=> FALSE,
			),
			'required'			=> FALSE,
			'description'		=> $t('The name of the database table containing the list of allowed parameter values to be input into the control'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '',
				),
			),
			'field_name'		=> 'fetchit7_field_par_fld_list_tbl',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		//parameter field value list table key field
		'fetchit7_field_par_fld_list_key' => array(
			'label'					=> $t('Parameter input list table key field'),
			'widget'				=> array(
				'type'					=> 'text_textfield',
				'module'				=> 'text',
				'active'				=> TRUE,
				'settings'			=> array (
					'size'					=> '20',
				),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'text_processing'	=> '0',
				'user_register_form'	=> FALSE,
			),
			'required'			=> FALSE,
			'description'		=> $t('[CURRENTLY LOCKED TO DEFAULT VALUE] The name of the key field (default = stored) in the database table containing the list of allowed parameter values.'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> 'stored',
				),
			),
			'field_name'		=> 'fetchit7_field_par_fld_list_key',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		//parameter field value list table display field
		'fetchit7_field_par_fld_list_dsp' => array(
			'label'					=> $t('Parameter input list table display field'),
			'widget'				=> array(
				'type'					=> 'text_textfield',
				'module'				=> 'text',
				'active'				=> TRUE,
				'settings'			=> array (
					'size'					=> '20',
				),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'text_processing'	=> '0',
				'user_register_form'	=> FALSE,
			),
			'required'			=> FALSE,
			'description'		=> $t('[CURRENTLY LOCKED TO DEFAULT VALUE] The name of the display field (default = displayed) in the database table containing the list of allowed parameter values'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> 'displayed',
				),
			),
			'field_name'		=> 'fetchit7_field_par_fld_list_dsp',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		//parameter field value list table uid field
		'fetchit7_field_par_fld_list_uid' => array(
			'label'					=> $t('Parameter input list table uid field'),
			'widget'				=> array(
				'type'					=> 'text_textfield',
				'module'				=> 'text',
				'active'				=> TRUE,
				'settings'			=> array (
					'size'					=> '10',
				),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'text_processing'	=> '0',
				'user_register_form'	=> FALSE,
			),
			'required'			=> FALSE,
			'description'		=> $t('The name of the parameter input list table drupal userid integer field.  Leave name blank to not use.  Adds a WHERE clause to the select query.  Default = blank.'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '',
				),
			),
			'field_name'		=> 'fetchit7_field_par_fld_list_uid',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		//parameter field value list table key field default value
		'fetchit7_field_par_fld_list_def' => array(
			'label'					=> $t('Parameter default value'),
			'widget'				=> array(
				'type'					=> 'text_textfield',
				'module'				=> 'text',
				'active'				=> TRUE,
				'settings'			=> array (
					'size'					=> '20',
				),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'text_processing'	=> '0',
				'user_register_form'	=> FALSE,
			),
			'required'			=> FALSE,
			'description'		=> $t('The default value for the input control.  It might be a default text value to put in the text box, or a selection in the parameter input list.'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '',
				),
			),
			'field_name'		=> 'fetchit7_field_par_fld_list_def',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		//parameter field data selection table
		'fetchit7_field_par_fld_data_tbl' => array(
			'label'					=> $t('Parameter data output table'),
			'widget'				=> array(
				'type'					=> 'text_textfield',
				'module'				=> 'text',
				'active'				=> TRUE,
				'settings'			=> array (
					'size'					=> '30',
				),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'text_processing'	=> '0',
				'user_register_form'	=> FALSE,
			),
			'required'			=> FALSE,
			'description'		=> $t('The name of the database table (data output table) into which the entered or selected values will be stored'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '',
				),
			),
			'field_name'		=> 'fetchit7_field_par_fld_data_tbl',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		//parameter field data selection table key field
		'fetchit7_field_par_fld_data_key' => array(
			'label'					=> $t(' Parameter data output table key field'),
			'widget'				=> array(
				'type'					=> 'text_textfield',
				'module'				=> 'text',
				'active'				=> TRUE,
				'settings'			=> array (
					'size'					=> '20',
				),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'text_processing'	=> '0',
				'user_register_form'	=> FALSE,
			),
			'required'			=> FALSE,
			'description'		=> $t('[CURRENTLY LOCKED AT DEFAULT VALUE] The name of the key field in the data output table (default = stored)'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> 'stored',
				),
			),
			'field_name'		=> 'fetchit7_field_par_fld_data_key',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		//parameter field data selection table uid field
		'fetchit7_field_par_fld_data_uid' => array(
			'label'					=> $t('Parameter data output table uid field'),
			'widget'				=> array(
				'type'					=> 'text_textfield',
				'module'				=> 'text',
				'active'				=> TRUE,
				'settings'			=> array (
					'size'					=> '10',
				),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'text_processing'	=> '0',
				'user_register_form'	=> FALSE,
			),
			'required'			=> FALSE,
			'description'		=> $t('The name of the parameter data output table drupal userid integer field.  Leave name blank to not use.  Adds a WHERE clause to the DELETE and INSERT queries.  Default = drupal_userid.'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> 'true',
				),
			),
			'field_name'		=> 'fetchit7_field_par_fld_data_uid',
			'entity_type'		=> 'drupal_userid',
			'bundle'				=> $content_name,
		),
				
	);
	
	return $fetchit7_instances;
}

/**
 * function that returns an array of all the field instances created by this module for the fetchit7_content_egrid content type
 * 
 * the best way to figure this out is using drush and the devel module:
 * drush ev 'print var_export(field_info_instance("entity_type","field_name","bundle_name"));'
 * e.g. drush ev 'print var_export(field_info_instance("node","fetchit7_field_location","fetchit7_content_table"));'
 **/
function _fetchit7_content_egrid_installed_instances () {
	$content_name = 'fetchit7_content_egrid';
	$t = get_t();
	$fetchit7_instances = array(
		// on this example I am including many of the instance definition parameters in the array
		//   but commenting out the ones I think I should let drupal 7 handle with defaults for now
		//'fetchit7_field_location' => array(
			//'label'					=> $t('form output location'),
			//'type'					=> 'list_integer',
			//'widget'				=> array(
			//	//'type'					=> 'options_select', // dropdown list
			//	'type'					=> 'options_buttons', // radio buttons or check boxes
			//	'module'				=> 'options',
			//	'settings'			=> array (),
			//	//'weight'				=> -3,
			//),
			//'required'			=> TRUE,
			//'description'		=> $t('This parameter tells fetchit7 where to display the form: 0 - not displayed, 1 - page, 2 - block'),
			//'default_value'	=> array(
			//	0								=> array(
			//		'value'					=> '2',
			//	),
			//),
			//'settings'			=> array (
			//	'user_register_form' => FALSE,
			//),
			//'display'				=> array (
			//	'default'				=> array (
			//		'label'					=> 'above',
			//		'type'					=> 'list_default',
			//		'settings'			=> array (),
			//		'module'				=> 'list',
			//		'weight'				=> 1,
			//	),
			//	'teaser'			=> array (
			//		'label'					=> 'above',
			//		'type'					=> 'hidden',
			//		'settings'			=> array (),
			//		'weight'				=> 0,
			//	),
			//),
			//'id'						=> 28,
			//'field_id'			=> 10,
			//'field_name'		=> 'fetchit7_field_location',
			//'entity_type'		=> 'node',
			//'bundle'				=> $content_name,
			//'deleted'				=> '0',
		//),
		// the rest will be defined in a more compressed fashion
		// =====================================================
		// these are fields that apply to multiple content types
		// =====================================================
		// form location
		'fetchit7_field_location' => array(
			'label'					=> $t('form output location'),
			'widget'				=> array(
				//'type'					=> 'options_select', // dropdown list
				'type'					=> 'options_buttons', // radio buttons or check boxes
				'module'				=> 'options',
				'active'				=> TRUE,
				'settings'			=> array (),
				//'weight'				=> -3,
			),
			'required'			=> TRUE,
			'description'		=> $t('This parameter tells fetchit7 where to display the form: none, page, block'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> 'block',
				),
			),
			'field_name'		=> 'fetchit7_field_location',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		// form enabled
		'fetchit7_field_enabled' => array(
			'label'					=> $t('Form output enabled'),
			'widget'				=> array(
				'type'					=> 'options_onoff',
				'module'				=> 'options',
				'active'				=> TRUE,
				'settings'			=> array (
					'display_label'	=> TRUE,
				),
				//'weight'				=> -3,
			),
			'required'			=> FALSE,
			'description'		=> $t('This parameter defines whether the form is enabled for output or not.'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '1',
				),
			),
			'field_name'		=> 'fetchit7_field_enabled',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		// database server host name
		'fetchit7_field_db_host' => array(
			'label'					=> $t('Database server host name'),
			'widget'				=> array(
				'type'					=> 'text_textfield',
				'module'				=> 'text',
				'active'				=> TRUE,
				'settings'			=> array (
					'size'					=> '30',
				),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'text_processing'	=> '0',
				'user_register_form'	=> FALSE,
			),
			'required'			=> FALSE,
			'description'		=> $t('The host name of the database server.'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> 'localhost',
				),
			),
			'field_name'		=> 'fetchit7_field_db_host',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		// database server type
		'fetchit7_field_db_type' => array(
			'label'					=> $t('Database server type'),
			'widget'				=> array(
				//'type'					=> 'options_select', // dropdown list
				'type'					=> 'options_buttons', // radio buttons or check boxes
				'module'				=> 'options',
				'active'				=> TRUE,
				'settings'			=> array (),
				//'weight'				=> -3,
			),
			'required'			=> TRUE,
			'description'		=> $t('The database server software type: postgresql, mysql, sqlserver'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> 'postgresql',
				),
			),
			'field_name'		=> 'fetchit7_field_db_type',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		// database server port
		'fetchit7_field_db_port' => array(
			'label'					=> $t('Database server port number'),
			'widget'				=> array(
				'type'					=> 'number',
				'module'				=> 'number',
				'active'				=> FALSE,
				'settings'			=> array (),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'min'	=> '0',
				'max'	=> '65000',
				'prefix'	=> 'prefix string',
				'suffix'	=> 'suffix string',
			),
			'required'			=> FALSE,
			'description'		=> $t('The database server port number used for network connections.'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '5432',
				),
			),
			'field_name'		=> 'fetchit7_field_db_port',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		// database name
		'fetchit7_field_db_name' => array(
			'label'					=> $t('Database name'),
			'widget'				=> array(
				'type'					=> 'text_textfield',
				'module'				=> 'text',
				'active'				=> TRUE,
				'settings'			=> array (
					'size'					=> '30',
				),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'text_processing'	=> '0',
				'user_register_form'	=> FALSE,
			),
			'required'			=> FALSE,
			'description'		=> $t('The name of the database to connect to.'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '',
				),
			),
			'field_name'		=> 'fetchit7_field_db_name',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		// database user login
		'fetchit7_field_db_login' => array(
			'label'					=> $t('Database user login'),
			'widget'				=> array(
				'type'					=> 'text_textfield',
				'module'				=> 'text',
				'active'				=> TRUE,
				'settings'			=> array (
					'size'					=> '30',
				),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'text_processing'	=> '0',
				'user_register_form'	=> FALSE,
			),
			'required'			=> FALSE,
			'description'		=> $t('The database user login'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '',
				),
			),
			'field_name'		=> 'fetchit7_field_db_login',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		// database user password
		'fetchit7_field_db_password' => array(
			'label'					=> $t('Database user password'),
			'widget'				=> array(
				'type'					=> 'text_textfield',
				'module'				=> 'text',
				'active'				=> TRUE,
				'settings'			=> array (
					'size'					=> '30',
				),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'text_processing'	=> '0',
				'user_register_form'	=> FALSE,
			),
			'required'			=> FALSE,
			'description'		=> $t('The database user password'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '',
				),
			),
			'field_name'		=> 'fetchit7_field_db_password',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		// pre-(form display) query (SQL) or function name (php function)
		'fetchit7_field_pre_function' => array(
			'label'					=> $t('Pre-(form display) SQL query or php.function'),
			'widget'				=> array(
				'type'					=> 'text_textfield',
				'module'				=> 'text',
				'active'				=> TRUE,
				'settings'			=> array (
					'size'					=> '60',
				),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'text_processing'	=> '0',
				'user_register_form'	=> FALSE,
			),
			'required'			=> FALSE,
			'description'		=> $t('A query (SQL) or the name of a php function (prepend with php.) to execute before displaying this form.'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '',
				),
			),
			'field_name'		=> 'fetchit7_field_pre_function',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		// post-(form submit) SQL query or PHP.function
		'fetchit7_field_post_function' => array(
			'label'					=> $t('Post-(form submit) SQL query or php.function'),
			'widget'				=> array(
				'type'					=> 'text_textfield',
				'module'				=> 'text',
				'active'				=> TRUE,
				'settings'			=> array (
					'size'					=> '60',
				),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'text_processing'	=> '0',
				'user_register_form'	=> FALSE,
			),
			'required'			=> FALSE,
			'description'		=> $t('A query (SQL) or the name of a php function (prepend with php.) to execute after the form data has been submitted.'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '',
				),
			),
			'field_name'		=> 'fetchit7_field_post_function',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		// database source data table/view name
		'fetchit7_field_source_view' => array(
			'label'					=> $t('Source data view'),
			'widget'				=> array(
				'type'					=> 'text_textfield',
				'module'				=> 'text',
				'active'				=> TRUE,
				'settings'			=> array (
					'size'					=> '30',
				),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'text_processing'	=> '0',
				'user_register_form'	=> FALSE,
			),
			'required'			=> FALSE,
			'description'		=> $t('Database source data table/view name'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '',
				),
			),
			'field_name'		=> 'fetchit7_field_source_view',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		// drupal user id (uid) field name
		'fetchit7_field_uid_field' => array(
			'label'					=> $t('User id (uid) field'),
			'widget'				=> array(
				'type'					=> 'text_textfield',
				'module'				=> 'text',
				'active'				=> TRUE,
				'settings'			=> array (
					'size'					=> '30',
				),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'text_processing'	=> '0',
				'user_register_form'	=> FALSE,
			),
			'required'			=> FALSE,
			'description'		=> $t('Drupal user ID (uid) field name.  Used in where clauses of queries and helps the drupal site developer keep each users data separate.'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '',
				),
			),
			'field_name'		=> 'fetchit7_field_uid_field',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		// key field name
		'fetchit7_field_key_field' => array(
			'label'					=> $t('Key field name'),
			'widget'				=> array(
				'type'					=> 'text_textfield',
				'module'				=> 'text',
				'active'				=> TRUE,
				'settings'			=> array (
					'size'					=> '30',
				),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'text_processing'	=> '0',
				'user_register_form'	=> FALSE,
			),
			'required'			=> FALSE,
			'description'		=> $t('The source table key field name.'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '',
				),
			),
			'field_name'		=> 'fetchit7_field_key_field',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		'fetchit7_field_table_weight' => array(
			'label'					=> $t('Table weight'),
			'type'					=> 'list_integer',
			'widget'				=> array(
				'type'					=> 'options_select', // dropdown list
				//'type'					=> 'options_buttons', // radio buttons or check boxes
				'module'				=> 'options',
				'settings'			=> array (),
				//'weight'				=> -3,
			),
			'required'			=> TRUE,
			'description'		=> $t('This parameter tells fetchit7 where on the form to display the table (relative to other form elements).'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '-8',
				),
			),
			//'settings'			=> array (
			//	'user_register_form' => FALSE,
			//),
			//'display'				=> array (
			//	'default'				=> array (
			//		'label'					=> 'above',
			//		'type'					=> 'list_default',
			//		'settings'			=> array (),
			//		'module'				=> 'list',
			//		'weight'				=> 1,
			//	),
			//	'teaser'			=> array (
			//		'label'					=> 'above',
			//		'type'					=> 'hidden',
			//		'settings'			=> array (),
			//		'weight'				=> 0,
			//	),
			//),
			//'id'						=> 28,
			//'field_id'			=> 10,
			'field_name'		=> 'fetchit7_field_table_weight',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
			//'deleted'				=> '0',
		),
		// submit button label
		'fetchit7_field_submit_label' => array(
			'label'					=> $t('Submit button label'),
			'widget'				=> array(
				'type'					=> 'text_textfield',
				'module'				=> 'text',
				'active'				=> TRUE,
				'settings'			=> array (
					'size'					=> '30',
				),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'text_processing'	=> '0',
				'user_register_form'	=> FALSE,
			),
			'required'			=> FALSE,
			'description'		=> $t('A label to put on the submit button on this form.'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '',
				),
			),
			'field_name'		=> 'fetchit7_field_submit_label',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		'fetchit7_field_submit_weight' => array(
			'label'					=> $t('Submit button weight'),
			'type'					=> 'list_integer',
			'widget'				=> array(
				'type'					=> 'options_select', // dropdown list
				//'type'					=> 'options_buttons', // radio buttons or check boxes
				'module'				=> 'options',
				'settings'			=> array (),
				//'weight'				=> -3,
			),
			'required'			=> TRUE,
			'description'		=> $t('This parameter tells fetchit7 where on the form to display the submit button (relative to other form elements).'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '8',
				),
			),
			//'settings'			=> array (
			//	'user_register_form' => FALSE,
			//),
			//'display'				=> array (
			//	'default'				=> array (
			//		'label'					=> 'above',
			//		'type'					=> 'list_default',
			//		'settings'			=> array (),
			//		'module'				=> 'list',
			//		'weight'				=> 1,
			//	),
			//	'teaser'			=> array (
			//		'label'					=> 'above',
			//		'type'					=> 'hidden',
			//		'settings'			=> array (),
			//		'weight'				=> 0,
			//	),
			//),
			//'id'						=> 28,
			//'field_id'			=> 10,
			'field_name'		=> 'fetchit7_field_submit_weight',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
			//'deleted'				=> '0',
		),
		// submit button redirect
		'fetchit7_field_submit_redirect' => array(
			'label'					=> $t('Submit button redirect'),
			'widget'				=> array(
				'type'					=> 'text_textfield',
				'module'				=> 'text',
				'active'				=> TRUE,
				'settings'			=> array (
					'size'					=> '30',
				),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'text_processing'	=> '0',
				'user_register_form'	=> FALSE,
			),
			'required'			=> FALSE,
			'description'		=> $t('A page URL (e.g. node/10) for Drupal to redirect the user to after a successful form submission caused by pressing this submit button.'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '',
				),
			),
			'field_name'		=> 'fetchit7_field_submit_redirect',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
				
		// =====================================================
		// these are fields that apply to editable grids
		// =====================================================
		
		
	);
	
	return $fetchit7_instances;
}


/**
 * function that returns an array of all the field instances created by this module for the fetchit7_content_appnd content type
 * 
 * the best way to figure this out is using drush and the devel module:
 * drush ev 'print var_export(field_info_instance("entity_type","field_name","bundle_name"));'
 * e.g. drush ev 'print var_export(field_info_instance("node","fetchit7_field_location","fetchit7_content_table"));'
 **/
function _fetchit7_content_appnd_installed_instances () {
	$content_name = 'fetchit7_content_appnd';
	$t = get_t();
	$fetchit7_instances = array(
		// on this example I am including many of the instance definition parameters in the array
		//   but commenting out the ones I think I should let drupal 7 handle with defaults for now
		//'fetchit7_field_location' => array(
			//'label'					=> $t('form output location'),
			//'type'					=> 'list_integer',
			//'widget'				=> array(
			//	//'type'					=> 'options_select', // dropdown list
			//	'type'					=> 'options_buttons', // radio buttons or check boxes
			//	'module'				=> 'options',
			//	'settings'			=> array (),
			//	//'weight'				=> -3,
			//),
			//'required'			=> TRUE,
			//'description'		=> $t('This parameter tells fetchit7 where to display the form: 0 - not displayed, 1 - page, 2 - block'),
			//'default_value'	=> array(
			//	0								=> array(
			//		'value'					=> '2',
			//	),
			//),
			//'settings'			=> array (
			//	'user_register_form' => FALSE,
			//),
			//'display'				=> array (
			//	'default'				=> array (
			//		'label'					=> 'above',
			//		'type'					=> 'list_default',
			//		'settings'			=> array (),
			//		'module'				=> 'list',
			//		'weight'				=> 1,
			//	),
			//	'teaser'			=> array (
			//		'label'					=> 'above',
			//		'type'					=> 'hidden',
			//		'settings'			=> array (),
			//		'weight'				=> 0,
			//	),
			//),
			//'id'						=> 28,
			//'field_id'			=> 10,
			//'field_name'		=> 'fetchit7_field_location',
			//'entity_type'		=> 'node',
			//'bundle'				=> $content_name,
			//'deleted'				=> '0',
		//),
		// the rest will be defined in a more compressed fashion
		// =====================================================
		// these are fields that apply to multiple content types
		// =====================================================
		// form location
		'fetchit7_field_location' => array(
			'label'					=> $t('form output location'),
			'widget'				=> array(
				//'type'					=> 'options_select', // dropdown list
				'type'					=> 'options_buttons', // radio buttons or check boxes
				'module'				=> 'options',
				'active'				=> TRUE,
				'settings'			=> array (),
				//'weight'				=> -3,
			),
			'required'			=> TRUE,
			'description'		=> $t('This parameter tells fetchit7 where to display the form: none, page, block'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> 'block',
				),
			),
			'field_name'		=> 'fetchit7_field_location',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		// form enabled
		'fetchit7_field_enabled' => array(
			'label'					=> $t('Form output enabled'),
			'widget'				=> array(
				'type'					=> 'options_onoff',
				'module'				=> 'options',
				'active'				=> TRUE,
				'settings'			=> array (
					'display_label'	=> TRUE,
				),
				//'weight'				=> -3,
			),
			'required'			=> FALSE,
			'description'		=> $t('This parameter defines whether the form is enabled for output or not.'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '1',
				),
			),
			'field_name'		=> 'fetchit7_field_enabled',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		// database server host name
		'fetchit7_field_db_host' => array(
			'label'					=> $t('Database server host name'),
			'widget'				=> array(
				'type'					=> 'text_textfield',
				'module'				=> 'text',
				'active'				=> TRUE,
				'settings'			=> array (
					'size'					=> '30',
				),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'text_processing'	=> '0',
				'user_register_form'	=> FALSE,
			),
			'required'			=> FALSE,
			'description'		=> $t('The host name of the database server.'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> 'localhost',
				),
			),
			'field_name'		=> 'fetchit7_field_db_host',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		// database server type
		'fetchit7_field_db_type' => array(
			'label'					=> $t('Database server type'),
			'widget'				=> array(
				//'type'					=> 'options_select', // dropdown list
				'type'					=> 'options_buttons', // radio buttons or check boxes
				'module'				=> 'options',
				'active'				=> TRUE,
				'settings'			=> array (),
				//'weight'				=> -3,
			),
			'required'			=> TRUE,
			'description'		=> $t('The database server software type: postgresql, mysql, sqlserver'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> 'postgresql',
				),
			),
			'field_name'		=> 'fetchit7_field_db_type',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		// database server port
		'fetchit7_field_db_port' => array(
			'label'					=> $t('Database server port number'),
			'widget'				=> array(
				'type'					=> 'number',
				'module'				=> 'number',
				'active'				=> FALSE,
				'settings'			=> array (),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'min'	=> '0',
				'max'	=> '65000',
				'prefix'	=> 'prefix string',
				'suffix'	=> 'suffix string',
			),
			'required'			=> FALSE,
			'description'		=> $t('The database server port number used for network connections.'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '5432',
				),
			),
			'field_name'		=> 'fetchit7_field_db_port',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		// database name
		'fetchit7_field_db_name' => array(
			'label'					=> $t('Database name'),
			'widget'				=> array(
				'type'					=> 'text_textfield',
				'module'				=> 'text',
				'active'				=> TRUE,
				'settings'			=> array (
					'size'					=> '30',
				),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'text_processing'	=> '0',
				'user_register_form'	=> FALSE,
			),
			'required'			=> FALSE,
			'description'		=> $t('The name of the database to connect to.'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '',
				),
			),
			'field_name'		=> 'fetchit7_field_db_name',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		// database user login
		'fetchit7_field_db_login' => array(
			'label'					=> $t('Database user login'),
			'widget'				=> array(
				'type'					=> 'text_textfield',
				'module'				=> 'text',
				'active'				=> TRUE,
				'settings'			=> array (
					'size'					=> '30',
				),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'text_processing'	=> '0',
				'user_register_form'	=> FALSE,
			),
			'required'			=> FALSE,
			'description'		=> $t('The database user login'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '',
				),
			),
			'field_name'		=> 'fetchit7_field_db_login',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		// database user password
		'fetchit7_field_db_password' => array(
			'label'					=> $t('Database user password'),
			'widget'				=> array(
				'type'					=> 'text_textfield',
				'module'				=> 'text',
				'active'				=> TRUE,
				'settings'			=> array (
					'size'					=> '30',
				),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'text_processing'	=> '0',
				'user_register_form'	=> FALSE,
			),
			'required'			=> FALSE,
			'description'		=> $t('The database user password'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '',
				),
			),
			'field_name'		=> 'fetchit7_field_db_password',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		// pre-(form display) query (SQL) or function name (php function)
		'fetchit7_field_pre_function' => array(
			'label'					=> $t('Pre-(form display) SQL query or php.function'),
			'widget'				=> array(
				'type'					=> 'text_textfield',
				'module'				=> 'text',
				'active'				=> TRUE,
				'settings'			=> array (
					'size'					=> '60',
				),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'text_processing'	=> '0',
				'user_register_form'	=> FALSE,
			),
			'required'			=> FALSE,
			'description'		=> $t('A query (SQL) or the name of a php function (prepend with php.) to execute before displaying this form.'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '',
				),
			),
			'field_name'		=> 'fetchit7_field_pre_function',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		// post-(form submit) SQL query or PHP.function
		'fetchit7_field_post_function' => array(
			'label'					=> $t('Post-(form submit) SQL query or php.function'),
			'widget'				=> array(
				'type'					=> 'text_textfield',
				'module'				=> 'text',
				'active'				=> TRUE,
				'settings'			=> array (
					'size'					=> '60',
				),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'text_processing'	=> '0',
				'user_register_form'	=> FALSE,
			),
			'required'			=> FALSE,
			'description'		=> $t('A query (SQL) or the name of a php function (prepend with php.) to execute after the form data has been submitted.'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '',
				),
			),
			'field_name'		=> 'fetchit7_field_post_function',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		// database source data table/view name
		'fetchit7_field_source_view' => array(
			'label'					=> $t('Source data view'),
			'widget'				=> array(
				'type'					=> 'text_textfield',
				'module'				=> 'text',
				'active'				=> TRUE,
				'settings'			=> array (
					'size'					=> '30',
				),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'text_processing'	=> '0',
				'user_register_form'	=> FALSE,
			),
			'required'			=> FALSE,
			'description'		=> $t('Database source data table/view name'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '',
				),
			),
			'field_name'		=> 'fetchit7_field_source_view',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		// drupal user id (uid) field name
		'fetchit7_field_uid_field' => array(
			'label'					=> $t('User id (uid) field'),
			'widget'				=> array(
				'type'					=> 'text_textfield',
				'module'				=> 'text',
				'active'				=> TRUE,
				'settings'			=> array (
					'size'					=> '30',
				),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'text_processing'	=> '0',
				'user_register_form'	=> FALSE,
			),
			'required'			=> FALSE,
			'description'		=> $t('Drupal user ID (uid) field name.  Used in where clauses of queries and helps the drupal site developer keep each users data separate.'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '',
				),
			),
			'field_name'		=> 'fetchit7_field_uid_field',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		// key field name
		'fetchit7_field_key_field' => array(
			'label'					=> $t('Key field name'),
			'widget'				=> array(
				'type'					=> 'text_textfield',
				'module'				=> 'text',
				'active'				=> TRUE,
				'settings'			=> array (
					'size'					=> '30',
				),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'text_processing'	=> '0',
				'user_register_form'	=> FALSE,
			),
			'required'			=> FALSE,
			'description'		=> $t('The source table key field name.'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '',
				),
			),
			'field_name'		=> 'fetchit7_field_key_field',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		'fetchit7_field_table_weight' => array(
			'label'					=> $t('Table weight'),
			'type'					=> 'list_integer',
			'widget'				=> array(
				'type'					=> 'options_select', // dropdown list
				//'type'					=> 'options_buttons', // radio buttons or check boxes
				'module'				=> 'options',
				'settings'			=> array (),
				//'weight'				=> -3,
			),
			'required'			=> TRUE,
			'description'		=> $t('This parameter tells fetchit7 where on the form to display the table (relative to other form elements).'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '-8',
				),
			),
			//'settings'			=> array (
			//	'user_register_form' => FALSE,
			//),
			//'display'				=> array (
			//	'default'				=> array (
			//		'label'					=> 'above',
			//		'type'					=> 'list_default',
			//		'settings'			=> array (),
			//		'module'				=> 'list',
			//		'weight'				=> 1,
			//	),
			//	'teaser'			=> array (
			//		'label'					=> 'above',
			//		'type'					=> 'hidden',
			//		'settings'			=> array (),
			//		'weight'				=> 0,
			//	),
			//),
			//'id'						=> 28,
			//'field_id'			=> 10,
			'field_name'		=> 'fetchit7_field_table_weight',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
			//'deleted'				=> '0',
		),
		// submit button label
		'fetchit7_field_submit_label' => array(
			'label'					=> $t('Submit button label'),
			'widget'				=> array(
				'type'					=> 'text_textfield',
				'module'				=> 'text',
				'active'				=> TRUE,
				'settings'			=> array (
					'size'					=> '30',
				),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'text_processing'	=> '0',
				'user_register_form'	=> FALSE,
			),
			'required'			=> FALSE,
			'description'		=> $t('A label to put on the submit button on this form.'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '',
				),
			),
			'field_name'		=> 'fetchit7_field_submit_label',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
		'fetchit7_field_submit_weight' => array(
			'label'					=> $t('Submit button weight'),
			'type'					=> 'list_integer',
			'widget'				=> array(
				'type'					=> 'options_select', // dropdown list
				//'type'					=> 'options_buttons', // radio buttons or check boxes
				'module'				=> 'options',
				'settings'			=> array (),
				//'weight'				=> -3,
			),
			'required'			=> TRUE,
			'description'		=> $t('This parameter tells fetchit7 where on the form to display the submit button (relative to other form elements).'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '8',
				),
			),
			//'settings'			=> array (
			//	'user_register_form' => FALSE,
			//),
			//'display'				=> array (
			//	'default'				=> array (
			//		'label'					=> 'above',
			//		'type'					=> 'list_default',
			//		'settings'			=> array (),
			//		'module'				=> 'list',
			//		'weight'				=> 1,
			//	),
			//	'teaser'			=> array (
			//		'label'					=> 'above',
			//		'type'					=> 'hidden',
			//		'settings'			=> array (),
			//		'weight'				=> 0,
			//	),
			//),
			//'id'						=> 28,
			//'field_id'			=> 10,
			'field_name'		=> 'fetchit7_field_submit_weight',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
			//'deleted'				=> '0',
		),
		// submit button redirect
		'fetchit7_field_submit_redirect' => array(
			'label'					=> $t('Submit button redirect'),
			'widget'				=> array(
				'type'					=> 'text_textfield',
				'module'				=> 'text',
				'active'				=> TRUE,
				'settings'			=> array (
					'size'					=> '30',
				),
				//'weight'				=> -3,
			),
			'settings'			=> array (
				'text_processing'	=> '0',
				'user_register_form'	=> FALSE,
			),
			'required'			=> FALSE,
			'description'		=> $t('A page URL (e.g. node/10) for Drupal to redirect the user to after a successful form submission caused by pressing this submit button.'),
			'default_value'	=> array(
				0								=> array(
					'value'					=> '',
				),
			),
			'field_name'		=> 'fetchit7_field_submit_redirect',
			'entity_type'		=> 'node',
			'bundle'				=> $content_name,
		),
				
		// =====================================================
		// these are fields that apply to append new record forms
		// =====================================================
		
		
	);
	
	return $fetchit7_instances;
}


/**
 * Implements hook_schema
 */
function fetchit7_schema () {	
	// create the fetchit7_content_types table
	//watchdog("fetchit7 module","fetchit7_schema: creating table fetchit7_content_types");
	$schema['fetchit7_content_types'] = array(
	  'description' => 'This static table defines the custom content types that will be available to the fetchit7 module',
	  'fields' => array(
	    'ndx' => array(
	      'description' => 'integer index',
	      'type' => 'int',
	      'not null' => TRUE,
	    ),
	    'name' => array(
	      'description' => 'machine name',
	      'type' => 'varchar',
	      'length' => '60',
	      'not null' => TRUE,
	    ),
	    'title' => array(
	      'description' => 'displayed name',
	      'type' => 'varchar',
	      'length' => '60',
	      'not null' => TRUE,
	    ),
	    'description' => array(
	      'description' => 'description of this content type',
	      'type' => 'text',
	      'not null' => TRUE,
	    ),
	    'location' => array(
	      'description' => 'the default content output location to use when creating content of this type; none, page, block; see table fetchit7_location_types',
	      'type' => 'varchar',
	      'length' => '60',
	      'not null' => TRUE,
	      'default' => 'block',
	    ),
	    'enabled' => array(
	      'description' => 'the default enabled flag to use when creating content of this type; 0 disabled, 1 enabled (essentially a boolean)',
	      'type' => 'int',
	      'not null' => TRUE,
	      'default' => 1,
	    ),
	    'db_host' => array(
	      'description' => 'the default db server hostname to use when creating content of this type; localhost, etc.',
	      'type' => 'varchar',
	      'length' => '60',
	      'not null' => TRUE,
	      'default' => 'localhost',
	    ),
	    'db_type' => array(
	      'description' => 'the default db type to use when creating content of this type; postgresql, mysql, sqlserver; see table fetchit7_db_types',
	      'type' => 'varchar',
	      'length' => '60',
	      'not null' => TRUE,
	      'default' => 'postgresql',
	    ),
	    'db_port' => array(
	      'description' => 'the default db server port number to use when creating content of this type; 5432 for pg, etc.',
	      'type' => 'int',
	      'not null' => TRUE,
	      'default' => 5432,
	    ),
	    'db_name' => array(
	      'description' => 'the default database name to use when creating content of this type',
	      'type' => 'varchar',
	      'length' => '60',
	      'not null' => TRUE,
	      'default' => 'default_db_name',
	    ),
	    'db_login' => array(
	      'description' => 'the default database login to use when creating content of this type',
	      'type' => 'varchar',
	      'length' => '60',
	      'not null' => TRUE,
	    ),
	    'db_password' => array(
	      'description' => 'the default database login password to use when creating content of this type',
	      'type' => 'varchar',
	      'length' => '60',
	      'not null' => TRUE,
	    ),
	  ),
	  'primary key' => array('ndx'),
	);
	
	//watchdog("fetchit7 module","fetchit7_schema: creating table fetchit7_db_types");
	$schema['fetchit7_db_types'] = array(
	  'description' => 'allowable fetchit7 db types',
	  'fields' => array(
	    'ndx' => array(
	      'description' => 'db type integer index 0, 1, 2, ...',
	      'type' => 'int',
	      'not null' => TRUE,
	    ),
	    'name' => array(
	      'description' => 'db type machine name for internal id use',
	      'type' => 'varchar',
	      'length' => '60',
	      'not null' => TRUE,
	    ),
	    'label' => array(
	      'description' => 'db type pretty name for labeling',
	      'type' => 'varchar',
	      'length' => '60',
	      'not null' => TRUE,
	    ),
	    'description' => array(
	      'description' => 'db type verbose description',
	      'type' => 'text',
	      'not null' => TRUE,
	    ),
	    'enabled' => array(
	      'description' => 'db type enabled for use or not',
	      'type' => 'int',
	      'size' => 'tiny',
	      'not null' => TRUE,
	      'default' => 1,
	    ),
	  ),
	  'primary key' => array('ndx'),
	);

	//watchdog("fetchit7 module","fetchit7_schema: creating table fetchit7_location_types");
	$schema['fetchit7_location_types'] = array(
	  'description' => 'fetchit7 output location types 0 not displayed, 1 page content, 2 block content',
	  'fields' => array(
	    'ndx' => array(
	      'description' => 'output location integer index 0, 1, 2, ...',
	      'type' => 'int',
	      'not null' => TRUE,
	    ),
	    'name' => array(
	      'description' => 'output location machine name for internal id use',
	      'type' => 'varchar',
	      'length' => '60',
	      'not null' => TRUE,
	    ),
	    'label' => array(
	      'description' => 'output location pretty name for labeling',
	      'type' => 'varchar',
	      'length' => '60',
	      'not null' => TRUE,
	    ),
	    'description' => array(
	      'description' => 'output location verbose description',
	      'type' => 'text',
	      'not null' => TRUE,
	    ),
	    'enabled' => array(
	      'description' => 'output location enabled for use or not',
	      'type' => 'int',
	      'size' => 'tiny',
	      'not null' => TRUE,
	      'default' => 1,
	    ),
	  ),
	  'primary key' => array('ndx'),
	);
	
	return $schema;
}

/**
 * Implements hook_field_schema().
 *
 * Defines the database schema of the field, using the format used by the
 * Schema API.
 *
 * The data we will store here is just one 7-character element, even
 * though the widget presents the three portions separately.
 *
 * All implementations of hook_field_schema() must be in the module's
 * .install file.
 *
 * @see http://drupal.org/node/146939
 * @see schemaapi
 * @see hook_field_schema()
 * @ingroup field_example
 */
//function fetchit7_field_schema($field) {
	// here is an example, the schema is just a structured array defining the columns and any indices of the new "field" - treats it like a table
	//
  // $columns = array(
  //   'rgb' => array('type' => 'varchar', 'length' => 7, 'not null' => FALSE),
  // );
  // $indexes = array(
  //   'rgb' => array('rgb'),
  // );
  // return array(
  //   'columns' => $columns,
  //   'indexes' => $indexes,
  // );
	//
	// so usually the field is just going to be a single column
	//	
//	switch ($field['type']) {
//		case 'enabled': // one of the fields i use
//			$schema = array(
//				'columns' => array(
//						'value'		=> array(
//								'type'			=> 'int',
//								'size'			=> 'medium',
//								'not null'	=> TRUE,
//						),
//				),
//				'indexes' => array(
//						'value'		=> array('value'),
//				),
//			);
//			break;
//		default:
//			
//			break;
//	}
//	
//	return $schema;
//	
//}


/**
 * Implements hook_uninstall()
 */

function fetchit7_uninstall () {
	//watchdog("fetchit7 module","fetchit7_uninstall: ");

	//$fetchit7_node_types = fetchit7_node_info();
	//$fetchit7_node_type_names = array_keys($fetchit7_node_types);
	// note this has to match what is in node_info and also what is defined in this .install file
	$fetchit7_node_type_names = array('fetchit7_content_table','fetchit7_content_param','fetchit7_content_egrid','fetchit7_content_appnd');
	//$fetchit7_node_type_names = array('fetchit7_content_table','fetchit7_content_param');
	
	
	//----------------------------------------------------------------------
	// delete all the created content nodes for the fetchit7 content types
	//----------------------------------------------------------------------
	$sql = 'SELECT nid FROM {node} n WHERE n.type = :type';
	
	/*
	$result = db_query($sql, array(':type' => 'fetchit7_content_table'));
	$nids = array();
	foreach ($result as $row) {
		$nids[] = $row->nid;
	}
	// delete these nodes
	node_delete_multiple($nids);

	$result = db_query($sql, array(':type' => 'fetchit7_content_param'));
	$nids = array();
	foreach ($result as $row) {
		$nids[] = $row->nid;
	}
	// delete these nodes
	node_delete_multiple($nids);
	*/
	foreach ($fetchit7_node_type_names as $fetchit7_node_type_name) {
		$result = db_query($sql, array(':type' => $fetchit7_node_type_name));
		$nids = array();
		foreach ($result as $row) {
			$nids[] = $row->nid;
		}
		// delete these nodes
		node_delete_multiple($nids);
	}
	
	
	//----------------------------------------------------------------------
	// loop over the fetchit7 fields and delete their instances, data and the fields themselves
	//----------------------------------------------------------------------
	foreach (array_keys(_fetchit7_installed_fields()) as $field) {
		field_delete_field($field);
	}
	
	//----------------------------------------------------------------------
	// loop over any remaining field instances attached to the content types (like the body field)
	//   and delete them individually
	//----------------------------------------------------------------------
	//$instances = field_info_instances('node','fetchit7_content_table');
	//foreach ($instances as $instance_name => $instance) {
	//	field_delete_instance($instance);
	//}
	//$instances = field_info_instances('node','fetchit7_content_param');
	//foreach ($instances as $instance_name => $instance) {
	//	field_delete_instance($instance);
	//}
	foreach ($fetchit7_node_type_names as $fetchit7_node_type_name) {
		$instances = field_info_instances('node',$fetchit7_node_type_name);
		foreach ($instances as $instance_name => $instance) {
			field_delete_instance($instance);
		}
	}
	
	//----------------------------------------------------------------------
	// delete the content types
	//----------------------------------------------------------------------
	//node_type_delete('fetchit7_content_table');
	//node_type_delete('fetchit7_content_param');
	foreach ($fetchit7_node_type_names as $fetchit7_node_type_name) {
		node_type_delete($fetchit7_node_type_name);
	}	

	// purge all field information
	field_purge_batch(1000);

}


/**
 * Implements hook_enable()
 */

function fetchit7_enable () {
	//watchdog("fetchit7 module","fetchit7_enable: ");
}